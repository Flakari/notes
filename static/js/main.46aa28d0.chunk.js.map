{"version":3,"sources":["containers/Title/Title.module.css","containers/EditorButtonContainer/EditorButtonContainer.module.css","containers/ColorContainer/ColorContainer.module.css","containers/NoteBoard/Note/NoteMenu/NoteMenuItem/NoteMenuItem.module.css","containers/NoteBoard/Note/Note.module.css","containers/Title/Title.tsx","components/Header/Header.tsx","containers/ColorContainer/ColorContainer.tsx","containers/EditorButtonContainer/EditorButton/EditorButton.tsx","containers/EditorButtonContainer/EditorDropdown/EditorDropdown.tsx","containers/EditorButtonContainer/EditorButtonContainer.tsx","containers/EditorContainer/EditorContainer.tsx","containers/PageContainer/PageContainer.tsx","components/PageMenu/PageMenu.tsx","components/BoardMenu/BoardMenu.tsx","components/MenuContainer/MenuContainer.tsx","containers/NoteBoard/Note/NoteMenu/NoteMenuItem/NoteMenuItem.tsx","containers/NoteBoard/Note/NoteMenu/NoteMenu.tsx","containers/NoteBoard/Note/Note.tsx","containers/NoteBoard/NoteBoard.tsx","App.tsx","reportWebVitals.ts","store/utility.ts","store/pageReducer.ts","store/boardReducer.ts","index.tsx","components/MenuContainer/MenuContainer.module.css","containers/EditorButtonContainer/EditorButton/EditorButton.module.css","containers/NoteBoard/Note/NoteMenu/NoteMenu.module.css","components/Header/Header.module.css","containers/PageContainer/PageContainer.module.css","components/PageMenu/PageMenu.module.css","containers/NoteBoard/NoteBoard.module.css"],"names":["module","exports","Title","props","title","useSelector","state","page","currentPageId","pages","filter","item","id","board","currentBoardId","boards","type","dispatch","useDispatch","useState","titleValue","setTitleValue","inputRef","useRef","ref","classes","TitleInput","value","onChange","e","target","placeholder","onBlur","current","scrollLeft","Header","currentId","MainHeader","TitleContainer","CreateNote","onClick","ColorContainer","className","data","basic","map","name","preventDefault","changeColor","showButton","clickHandler","style","background","color","EditorButton","active","setActive","editorState","getSelection","selection","setSelection","setStyle","useEffect","styleType","getCurrentInlineStyle","has","hasMenu","anchorKey","getCurrentContent","getBlockForKey","getAnchorKey","getType","button","InlineButton","icon","join","onMouseDown","fn","aria-label","toLowerCase","ButtonWithMenuContainer","InlineSubButton","showValue","EditorDropdown","default","setValue","checkInlineStyles","useCallback","options","option","checkBlockStyles","selectOption","textColorArr","highlightColorArr","fontSizeArr","fontSizes","sizes","colorData","push","headers","EditorButtonContainer","showTextColor","setShowTextColor","showHighlightColor","setShowHighlightColor","inlineStyles","setInlineStyles","blockStyles","setBlockStyles","basicInlineStyles","btnType","basicBlockStyles","fullInlineStyles","fullBlockStyles","editorButtonSelection","prevState","onInlineStyleClick","command","setEditorState","RichUtils","toggleInlineStyle","removeComponentLoadedState","removeInlineStyle","styleArr","contentWithoutStyles","reduce","newContentState","Modifier","contentState","EditorState","colorChange","colorArr","newStyle","applyInlineStyle","fontSizeChange","size","changeScriptAlignment","opposite","newEditorState","onBlockStyleClick","toggleBlockType","ButtonContainer","editorButtonClass","btnStyle","inlineButton","textColorMap","highlightColorMap","fontSizeMap","backgroundColor","fontSize","EditorContainer","saveNote","content","editorClass","showButtons","lockEditor","createWithContent","convertFromRaw","JSON","parse","createEmpty","editorContainerRef","appStart","setAppStart","savingStr","setSavingStr","editorRef","styleMap","textDecoration","verticalAlign","timer","setTimeout","stringify","convertToRaw","clearTimeout","addEventListener","undefined","focus","handleKeyCommand","newState","customStyleMap","keyBindingFn","key","blockType","getStartKey","onTab","replaceText","getDefaultKeyBinding","readOnly","PageContainer","PageEditorContainer","connect","showPage","deletePage","hideBoard","PageMenu","containerToggle","btn","BoardMenu","boardState","Object","keys","MenuContainer","showPagesMenu","setShowPagesMenu","showFull","setShowFull","showPages","showBoard","containerRef","transitionStyles","entering","transform","entered","exited","visibility","defaultStyle","transition","Transition","in","timeout","nodeRef","MenuButtonContainer","MenuToggle","expanded","collapsed","NoteMenuItem","clickFunction","children","noteColors","lockTypes","NoteMenu","locks","notes","showColorMenu","setShowColorMenu","showLockMenu","setShowLockMenu","NoteSubMenu","noteId","lockType","LockMenuItem","delete","Note","boardId","note","diffX","setDiffX","diffY","setDiffY","setFocus","zIndex","top","left","position","cursor","grabDivStyle","setGrabDivStyle","showEditorButtons","setShowEditorButtons","showNoteMenu","setShowNoteMenu","NoteButtonContainer","editorButtonContainerClass","setEditorButtonContainerClass","noteFocus","inFocus","zIndexHandler","onMouseMove","dragging","screenY","window","scrollY","screenX","scrollX","onMouseUp","right","currentTarget","getBoundingClientRect","bottom","classList","innerWidth","innerHeight","setEditorButtonClass","setDraggingState","containerHeight","direction","containerWidth","stopPropagation","setNoteFocus","NoteGrabContainer","NoteEditorContainer","editor","NoteMenuButton","viewBox","xmlns","aria-labelledby","role","d","hideMenu","NoteBoard","setDragging","maxZIndex","width","height","heightValue","widthValue","AddButton","showEditor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updateLocalStorage","localStorage","setItem","initialState","getItem","savePage","newPagesState","splice","i","length","findPageIndex","updatePages","updateAction","newPage","pageReducer","action","newPages","concat","v4","createNewNote","newZIndex","tempBoardsState","updateBoard","newBoardValue","updateBoardReducer","newBoard","updateNoteInReducer","changeValue","updatedBoard","noteValue","updateNote","createTempNote","noteReducer","lockPath","boardReducer","newBoards","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46aa28d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleInput\":\"Title_TitleInput__3JHxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonContainer\":\"EditorButtonContainer_ButtonContainer__veloK\",\"ButtonWithMenuContainer\":\"EditorButtonContainer_ButtonWithMenuContainer__2gIUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorContainer\":\"ColorContainer_ColorContainer__1L_ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteMenuItem\":\"NoteMenuItem_NoteMenuItem__22r3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Note\":\"Note_Note__2FwFU\",\"blue\":\"Note_blue__3WIEK\",\"green\":\"Note_green__1XbtZ\",\"pink\":\"Note_pink__1P1-l\",\"NoteEditorContainer\":\"Note_NoteEditorContainer__6q758\",\"NoteGrabContainer\":\"Note_NoteGrabContainer__3XDGp\",\"NoteButtonContainer\":\"Note_NoteButtonContainer__1SQfp\",\"right\":\"Note_right__1grwx\",\"bottom\":\"Note_bottom__ymkgG\",\"NoteMenuButton\":\"Note_NoteMenuButton__23o6K\"};","import React, { useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport classes from './Title.module.css';\r\nimport CombinedState from '../../store/combinedState';\r\n\r\ninterface PropTypes {\r\n    id: string;\r\n}\r\n\r\nconst Title = (props: PropTypes) => {\r\n    const title = useSelector((state: CombinedState) => {\r\n        if (state.page.currentPageId !== '') return state.page.pages.filter((item: any) => item.id === props.id)[0].title;\r\n        if (state.board.currentBoardId !== '') return state.board.boards[props.id].title;\r\n    });\r\n    const type = useSelector((state: CombinedState) => {\r\n        if (state.page.currentPageId !== '') return 'page';\r\n        if (state.board.currentBoardId !== '') return 'board';\r\n    });\r\n    const dispatch = useDispatch();\r\n    const [titleValue, setTitleValue] = useState(title || 'Untitled');\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const titleChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitleValue(e.target.value);\r\n        if (type === 'page') dispatch({ type: 'SAVE_PAGE_TITLE', id: props.id, title: e.target.value });\r\n        if (type === 'board') dispatch({ type: 'SAVE_BOARD_TITLE', title: e.target.value });\r\n    };\r\n\r\n    const blurHandler = () => {\r\n        if (inputRef.current) inputRef.current.scrollLeft = 0;\r\n    }\r\n\r\n    return (\r\n        <input ref={inputRef} id={classes.TitleInput} type=\"text\" value={titleValue} onChange={titleChangeHandler} placeholder='Untitled' onBlur={blurHandler} />\r\n    );\r\n};\r\n\r\nexport default Title;\r\n","import classes from './Header.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Title from '../../containers/Title/Title';\r\n\r\nexport const Header = () => {\r\n    const currentId = useSelector((state: any) => {\r\n        if (state.page.currentPageId !== '') return state.page.currentPageId;\r\n        if (state.board.currentBoardId !== '') return state.board.currentBoardId;\r\n        return '';\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = () => {\r\n        dispatch({ type: 'CREATE_PAGE' });\r\n    };\r\n\r\n    return (\r\n        <header id={classes.MainHeader}>\r\n            <div id={classes.TitleContainer}>\r\n                {currentId !== '' ? <Title key={currentId} id={currentId} /> : <p>Notes</p>}\r\n            </div>\r\n            <button id={classes.CreateNote} onClick={clickHandler}>Create Note</button>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import classes from './ColorContainer.module.css';\r\nimport data from '../../colors.json';\r\nimport { SyntheticEvent } from 'react';\r\n\r\ninterface PropTyes {\r\n    type: string;\r\n    changeColor: (type: string, color: string) => void;\r\n    showButton: (type: string) => void\r\n}\r\n\r\nconst ColorContainer = (props: PropTyes) => {\r\n    const clickHandler = (e: SyntheticEvent, name: string) => {\r\n        e.preventDefault();\r\n        props.changeColor(props.type, name);\r\n        props.showButton(props.type);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.ColorContainer}>\r\n            <ul>\r\n                {data.basic.map(item => {\r\n                    return (\r\n                        <li\r\n                            key={item.name}\r\n                            onClick={(e) => clickHandler(e, item.name)}\r\n                        >\r\n                            <div style={{ background: item.color }}></div>\r\n                            {item.name}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ColorContainer;\r\n","import { SyntheticEvent, useEffect, useState } from 'react';\r\nimport { EditorState } from 'draft-js';\r\n\r\nimport ColorContainer from '../../ColorContainer/ColorContainer';\r\nimport classes from './EditorButton.module.css';\r\nimport data from '../../../colors.json';\r\n\r\ninterface PropTypes {\r\n    type: string;\r\n    icon: string | undefined;\r\n    color?: string;\r\n    hasMenu?: boolean;\r\n    fn: any;\r\n    showValue?: boolean;\r\n    showButton?: (type: string) => void;\r\n    editorState: EditorState;\r\n    styleType: string;\r\n}\r\n\r\nconst EditorButton = (props: PropTypes) => {\r\n    const [active, setActive] = useState(false);\r\n    const [selection, setSelection] = useState(props.editorState.getSelection());\r\n    const [style, setStyle] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (props.styleType === 'inline') {\r\n            setActive(props.editorState.getCurrentInlineStyle().has(props.type));\r\n\r\n            if (props.hasMenu) {\r\n                for (let color of data.basic) {\r\n                    if (props.editorState.getCurrentInlineStyle().has(`${color.name}-${props.type}`)) {\r\n                        setStyle({ color: color.color });\r\n                        return;\r\n                    } else {\r\n                        setStyle({});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.styleType === 'block' && props.type !== 'unstyled') {\r\n            const anchorKey = props.editorState.getCurrentContent().getBlockForKey(selection.getAnchorKey());\r\n            setActive(anchorKey && anchorKey.getType() === props.type);\r\n        }\r\n    }, [props.editorState, props.type, selection, props.styleType, props.hasMenu]);\r\n\r\n    useEffect(() => {\r\n        setSelection(props.editorState.getSelection());\r\n    }, [props.editorState]);\r\n\r\n    const clickHandler = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        props.fn(props.type);\r\n    };\r\n\r\n    let button = (\r\n        <button\r\n            className={[classes.InlineButton, `fas fa-${props.icon}`, active ? classes.active : null].join(' ')}\r\n            onMouseDown={clickHandler}\r\n            aria-label={props.type.toLowerCase()}\r\n            style={style}\r\n        ></button>\r\n    );\r\n\r\n    if (props.hasMenu) {\r\n        button = (\r\n            <div className={classes.ButtonWithMenuContainer}>\r\n                {button}\r\n                <button\r\n                    onMouseDown={() => props.showButton!(props.type)}\r\n                    className={classes.InlineSubButton}\r\n                    aria-label='Dropdown'\r\n                ><div></div></button>\r\n                {props.showValue ? <ColorContainer type={props.type} changeColor={props.fn} showButton={props.showButton!} /> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return button;\r\n};\r\n\r\nexport default EditorButton;\r\n","import { useState, useEffect, ChangeEvent, useCallback } from 'react';\r\nimport { EditorState } from 'draft-js';\r\n\r\ninterface PropTypes {\r\n    options: any[];\r\n    fn: any;\r\n    type: string;\r\n    default: string;\r\n    editorState: EditorState;\r\n    styleType: string;\r\n}\r\n\r\nconst EditorDropdown = (props: PropTypes) => {\r\n    const [value, setValue] = useState(props.default);\r\n    const [selection, setSelection] = useState(props.editorState.getSelection());\r\n\r\n    const setSelectValue = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const checkInlineStyles = useCallback((editorState: EditorState) => {\r\n        for (let option of props.options) {\r\n            // Currently font size is the only inline dropdown\r\n            if (editorState.getCurrentInlineStyle().has(`${option}-FONTSIZE`)) {\r\n                setValue(option);\r\n                return;\r\n            } else {\r\n                setValue(props.default);\r\n            }\r\n        }\r\n    }, [props.options, props.default]);\r\n\r\n    const checkBlockStyles = useCallback((editorState: EditorState, selection: any) => {\r\n        const anchorKey = editorState.getCurrentContent().getBlockForKey(selection.getAnchorKey());\r\n        for (let option of props.options) {\r\n            if (anchorKey && anchorKey.getType() === option) {\r\n                setValue(option);\r\n                return;\r\n            } else {\r\n                setValue('');\r\n            }\r\n        }\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        checkInlineStyles(props.editorState);\r\n        setSelection(props.editorState.getSelection());\r\n    }, [props.editorState, checkInlineStyles]);\r\n\r\n    useEffect(() => {\r\n        if (props.styleType === 'block') checkBlockStyles(props.editorState, selection);\r\n    }, [selection, props.editorState, checkBlockStyles, props.styleType]);\r\n\r\n\r\n    return (\r\n        <select aria-label={props.type.toLowerCase()} value={value} onChange={setSelectValue}>\r\n            <option value=''>---</option>\r\n            {props.options.map(selectOption => {\r\n                return <option\r\n                    key={selectOption}\r\n                    onClick={() => props.fn(selectOption)}\r\n                    value={selectOption}\r\n                >{selectOption}</option>\r\n            })}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default EditorDropdown;\r\n","import { useEffect, useState } from 'react';\r\nimport { EditorState, RichUtils, Modifier } from 'draft-js';\r\n\r\nimport colorData from '../../colors.json';\r\nimport fontSizes from '../../font-sizes.json';\r\nimport classes from './EditorButtonContainer.module.css';\r\nimport EditorButton from './EditorButton/EditorButton';\r\nimport EditorDropdown from './EditorDropdown/EditorDropdown';\r\n\r\ninterface PropTypes {\r\n    editorState: EditorState;\r\n    setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\r\n    contentState: any;\r\n    removeComponentLoadedState: () => void;\r\n    editorButtonClass: string;\r\n    editorButtonSelection: 'basic' | 'full';\r\n}\r\n\r\nconst textColorArr: string[] = [];\r\nconst highlightColorArr: string[] = [];\r\nconst fontSizeArr = fontSizes.sizes.map(item => `${item}-FONTSIZE`);\r\n\r\nfor (let item of colorData.basic) {\r\n    textColorArr.push(`${item.name}-TEXTCOLOR`);\r\n    highlightColorArr.push(`${item.name}-HIGHLIGHT`);\r\n}\r\n\r\nconst headers = [\r\n    'header-one',\r\n    'header-two',\r\n    'header-three',\r\n    'header-four',\r\n    'header-five',\r\n    'header-six'\r\n];\r\n\r\nconst DEFAULT_TEXT_SIZE = 16;\r\n\r\ninterface ButtonStyle {\r\n    icon?: string;\r\n    type: string;\r\n    btnType?: string;\r\n    color?: boolean;\r\n    hasMenu?: boolean;\r\n}\r\n\r\nconst EditorButtonContainer = (props: PropTypes) => {\r\n    const [showTextColor, setShowTextColor] = useState(false);\r\n    const [showHighlightColor, setShowHighlightColor] = useState(false);\r\n    const [inlineStyles, setInlineStyles] = useState<ButtonStyle[]>([]);\r\n    const [blockStyles, setBlockStyles] = useState<ButtonStyle[]>([]);\r\n\r\n    useEffect(() => {\r\n        const basicInlineStyles: ButtonStyle[] = [\r\n            { icon: 'bold', type: 'BOLD', btnType: 'button' },\r\n            { icon: 'italic', type: 'ITALIC', btnType: 'button' },\r\n            { icon: 'underline', type: 'UNDERLINE', btnType: 'button' },\r\n            { icon: 'strikethrough', type: 'STRIKETHROUGH', btnType: 'button' },\r\n            { icon: 'superscript', type: 'SUPERSCRIPT', btnType: 'button' },\r\n            { icon: 'subscript', type: 'SUBSCRIPT', btnType: 'button' },\r\n        ];\r\n\r\n        const basicBlockStyles: ButtonStyle[] = [\r\n            { icon: 'list-ul', type: 'unordered-list-item', btnType: 'button' },\r\n            { icon: 'list-ol', type: 'ordered-list-item', btnType: 'button' }\r\n        ];\r\n\r\n        const fullInlineStyles: ButtonStyle[] = [\r\n            ...basicInlineStyles,\r\n            { icon: 'font', type: 'TEXTCOLOR', btnType: 'button', color: true, hasMenu: true },\r\n            { icon: 'highlighter', type: 'HIGHLIGHT', btnType: 'button', color: true, hasMenu: true },\r\n            { btnType: 'select', type: 'FONTSIZE' }\r\n        ];\r\n\r\n        const fullBlockStyles: ButtonStyle[] = [\r\n            { btnType: 'select', type: 'headers' },\r\n            ...basicBlockStyles,\r\n            { icon: 'quote-right', type: 'blockquote', btnType: 'button' },\r\n            { icon: 'code', type: 'code-block', btnType: 'button' },\r\n            { icon: 'remove-format', type: 'unstyled', btnType: 'button' },\r\n        ];\r\n\r\n        setInlineStyles(() => props.editorButtonSelection === 'basic' ? basicInlineStyles : fullInlineStyles);\r\n        setBlockStyles(() => props.editorButtonSelection === 'basic' ? basicBlockStyles : fullBlockStyles);\r\n    }, [props.editorButtonSelection]);\r\n\r\n    const showButton = (type: string) => {\r\n        if (type === 'TEXTCOLOR') {\r\n            setShowTextColor(prevState => !prevState);\r\n        } else {\r\n            setShowHighlightColor(prevState => !prevState);\r\n        }\r\n    };\r\n\r\n    // Handles editor button commands for inline styles\r\n    const onInlineStyleClick = (command: string) => {\r\n        props.setEditorState(RichUtils.toggleInlineStyle(props.editorState, command));\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    // Removes chosen inline stylings based on current selection in editor\r\n    const removeInlineStyle = (styleArr: string[]) => {\r\n        const contentWithoutStyles = styleArr.reduce(\r\n            (newContentState, style) =>\r\n                Modifier.removeInlineStyle(\r\n                    newContentState,\r\n                    props.editorState.getSelection(),\r\n                    style\r\n                ),\r\n            props.contentState\r\n        );\r\n\r\n        return EditorState.push(\r\n            props.editorState,\r\n            contentWithoutStyles,\r\n            'change-inline-style'\r\n        );\r\n    };\r\n\r\n    // Overrides color or highlight styles, first removing appropriate style in range and inserting new\r\n    const colorChange = (type: string, color: string) => {\r\n        const colorArr = type === 'TEXTCOLOR' ? textColorArr : highlightColorArr;\r\n        if ((type === 'TEXTCOLOR' && color === 'black') || (type === 'HIGHLIGHT' && color === 'white')) {\r\n            props.setEditorState(removeInlineStyle(colorArr));\r\n        } else {\r\n            const newStyle = Modifier.applyInlineStyle(\r\n                removeInlineStyle(colorArr).getCurrentContent(),\r\n                props.editorState.getSelection(),\r\n                type === 'TEXTCOLOR' ? `${color}-TEXTCOLOR` : `${color}-HIGHLIGHT`\r\n            );\r\n            props.setEditorState(EditorState.push(\r\n                props.editorState,\r\n                newStyle,\r\n                'change-inline-style'\r\n            ));\r\n        }\r\n\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    const fontSizeChange = (size: number) => {\r\n        if (size === DEFAULT_TEXT_SIZE) {\r\n            props.setEditorState(removeInlineStyle(fontSizeArr));\r\n        } else {\r\n            const newStyle = Modifier.applyInlineStyle(\r\n                removeInlineStyle(fontSizeArr).getCurrentContent(),\r\n                props.editorState.getSelection(),\r\n                `${size}-FONTSIZE`\r\n            );\r\n            props.setEditorState(EditorState.push(\r\n                props.editorState,\r\n                newStyle,\r\n                'change-inline-style'\r\n            ));\r\n        }\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    // Overrides script inline styles if other is present, else it toggles whatever script is called\r\n    const changeScriptAlignment = (type: string) => {\r\n        const opposite = type === 'SUPERSCRIPT' ? 'SUBSCRIPT' : 'SUPERSCRIPT';\r\n        let newEditorState: EditorState = props.editorState;\r\n        // If the opposite script inline style is present, toggle that first before toggling the other\r\n        if (props.editorState.getCurrentInlineStyle().has(opposite)) {\r\n            newEditorState = RichUtils.toggleInlineStyle(props.editorState, opposite);\r\n        }\r\n        props.setEditorState(RichUtils.toggleInlineStyle(newEditorState, type));\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    const onBlockStyleClick = (command: string) => {\r\n        props.setEditorState(RichUtils.toggleBlockType(props.editorState, command));\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    const inlineButton = (btnStyle: ButtonStyle) => {\r\n        const fn = 'color' in btnStyle ? colorChange :\r\n            btnStyle.type === 'SUPERSCRIPT' || btnStyle.type === 'SUBSCRIPT' ? changeScriptAlignment : onInlineStyleClick;\r\n        const showValue = btnStyle.type === 'TEXTCOLOR' ? showTextColor : showHighlightColor;\r\n\r\n        return (\r\n            <EditorButton\r\n                key={btnStyle.type}\r\n                type={btnStyle.type}\r\n                icon={btnStyle.icon}\r\n                hasMenu={btnStyle.hasMenu}\r\n                fn={fn}\r\n                showValue={showValue}\r\n                showButton={showButton}\r\n                editorState={props.editorState}\r\n                styleType='inline'\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={[classes.ButtonContainer, props.editorButtonClass].join(' ')}>\r\n            {inlineStyles.map(style => {\r\n                return style.btnType === 'button' ?\r\n                    inlineButton(style) : (\r\n                        <EditorDropdown\r\n                            key={style.type}\r\n                            options={fontSizes.sizes}\r\n                            fn={fontSizeChange}\r\n                            type={style.type}\r\n                            default='16'\r\n                            editorState={props.editorState}\r\n                            styleType='inline'\r\n                        />\r\n                    );\r\n            })}\r\n            {blockStyles.map(style => {\r\n                return style.btnType === 'button' ? (\r\n                    <EditorButton\r\n                        key={style.type}\r\n                        type={style.type}\r\n                        icon={style.icon}\r\n                        fn={onBlockStyleClick}\r\n                        editorState={props.editorState}\r\n                        styleType='block'\r\n                    />\r\n                ) : (\r\n                    <EditorDropdown\r\n                        key={style.type}\r\n                        options={headers}\r\n                        fn={onBlockStyleClick}\r\n                        type={style.type}\r\n                        default='headerone'\r\n                        editorState={props.editorState}\r\n                        styleType='block'\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditorButtonContainer;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { convertToRaw, convertFromRaw, Editor, EditorState, RichUtils, getDefaultKeyBinding, Modifier } from 'draft-js';\r\nimport colorData from '../../colors.json';\r\nimport fontSizes from '../../font-sizes.json';\r\nimport EditorButtonContainer from '../EditorButtonContainer/EditorButtonContainer';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\ninterface PropTypes {\r\n    id: string;\r\n    saveNote: (id: string, content: string) => void;\r\n    content: string;\r\n    editorButtonClass: string;\r\n    editorClass: string;\r\n    showButtons?: boolean;\r\n    editorButtonSelection: 'basic' | 'full';\r\n    lockEditor?: boolean;\r\n}\r\n\r\nconst textColorMap: { [key: string]: {} } = {};\r\nconst highlightColorMap: { [key: string]: {} } = {};\r\nconst fontSizeMap: { [key: string]: {} } = {};\r\n\r\nfor (let item of colorData.basic) {\r\n    textColorMap[`${item.name}-TEXTCOLOR`] = { color: item.color };\r\n    highlightColorMap[`${item.name}-HIGHLIGHT`] = { backgroundColor: item.color };\r\n}\r\n\r\nfor (let item of fontSizes.sizes) {\r\n    fontSizeMap[`${item}-FONTSIZE`] = { fontSize: item };\r\n}\r\n\r\nconst EditorContainer = ({ id, saveNote, content, editorButtonClass, editorClass, showButtons, editorButtonSelection, lockEditor }: PropTypes) => {\r\n    const [editorState, setEditorState] = useState(content ? () => EditorState.createWithContent(convertFromRaw(JSON.parse(content))) : () => EditorState.createEmpty());\r\n    const contentState = editorState.getCurrentContent();\r\n    const editorContainerRef = useRef<HTMLDivElement>(null);\r\n    // Flags if container component has just been loaded, only changes to false when editor gets used\r\n    const [appStart, setAppStart] = useState(true);\r\n    const [savingStr, setSavingStr] = useState(false);\r\n    const editorRef = useRef<Editor>(null);\r\n\r\n    const styleMap = {\r\n        'STRIKETHROUGH': {\r\n            textDecoration: 'line-through'\r\n        },\r\n        'SUPERSCRIPT': {\r\n            fontSize: '.83em',\r\n            verticalAlign: 'super'\r\n        },\r\n        'SUBSCRIPT': {\r\n            fontSize: '.83em',\r\n            verticalAlign: 'sub'\r\n        },\r\n        ...textColorMap,\r\n        ...highlightColorMap,\r\n        ...fontSizeMap\r\n    };\r\n\r\n    // Debounce save feature\r\n    useEffect(() => {\r\n        setSavingStr(false);\r\n        let timer = setTimeout(() => {\r\n            saveNote(id, JSON.stringify(convertToRaw(contentState)));\r\n            if (!appStart) {\r\n                setSavingStr(true);\r\n            }\r\n        }, 2000);\r\n        return () => {\r\n            clearTimeout(timer);\r\n        }\r\n    }, [contentState, appStart, saveNote, id]);\r\n\r\n    // Allows save message to appear after a key has been pressed in the editing container\r\n    useEffect(() => {\r\n        editorContainerRef.current?.addEventListener('keydown', () => {\r\n            setAppStart(false);\r\n        });\r\n    }, []);\r\n\r\n    // Removes save message a few seconds after saving\r\n    useEffect(() => {\r\n        let timer = setTimeout(() => {\r\n            if (savingStr === true) setSavingStr(false);\r\n        }, 2500);\r\n\r\n        return () => {\r\n            clearTimeout(timer);\r\n        }\r\n    }, [savingStr]);\r\n\r\n    const keyBindingFn = (e: any) => {\r\n        if (e.key === 'Tab') {\r\n            const selection = editorState.getSelection();\r\n            const blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\r\n\r\n            if (blockType === \"unordered-list-item\" || blockType === \"ordered-list-item\") {\r\n                const newState = RichUtils.onTab(e, editorState, 4);\r\n                setEditorState(newState);\r\n            } else {\r\n                const newState = Modifier.replaceText(editorState.getCurrentContent(), selection, '\\t');\r\n                setEditorState(EditorState.push(editorState, newState, 'insert-characters'));\r\n            }\r\n\r\n            return 'on-tab';\r\n        }\r\n\r\n        return getDefaultKeyBinding(e);\r\n    };\r\n\r\n    // Basic function to handle key commands\r\n    const handleKeyCommand = (command: string) => {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n        if (command === 'on-tab') {\r\n            return 'handled';\r\n        }\r\n\r\n        if (newState) {\r\n            setEditorState(newState);\r\n            return 'handled';\r\n        } else {\r\n            return 'not-handled';\r\n        }\r\n    };\r\n\r\n    const removeComponentLoadedState = () => {\r\n        if (appStart) setAppStart(false);\r\n    };\r\n\r\n    const focusEditor = () => {\r\n        if (editorRef.current) {\r\n            editorRef.current.focus();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showButtons === undefined || showButtons ? <EditorButtonContainer\r\n                editorState={editorState}\r\n                setEditorState={setEditorState}\r\n                contentState={contentState}\r\n                removeComponentLoadedState={removeComponentLoadedState}\r\n                editorButtonClass={editorButtonClass}\r\n                editorButtonSelection={editorButtonSelection}\r\n            /> : null}\r\n            <div ref={editorContainerRef} className={editorClass} onClick={focusEditor}>\r\n                <Editor\r\n                    ref={editorRef}\r\n                    handleKeyCommand={handleKeyCommand}\r\n                    customStyleMap={styleMap}\r\n                    editorState={editorState}\r\n                    onChange={setEditorState}\r\n                    keyBindingFn={keyBindingFn}\r\n                    readOnly={lockEditor !== undefined && lockEditor}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditorContainer;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport EditorContainer from '../EditorContainer/EditorContainer';\r\nimport State from '../../store/combinedState';\r\nimport classes from './PageContainer.module.css';\r\nimport { useCallback } from 'react';\r\n\r\nconst PageContainer = () => {\r\n    const id = useSelector((state: State) => state.page.currentPageId);\r\n    const content = useSelector((state: State) => state.page.pages.filter((item: any) => item.id === id)[0].content);\r\n    const dispatch = useDispatch();\r\n\r\n    const saveNote = useCallback((id: string, content: string) => {\r\n        dispatch({ type: 'SAVE_PAGE', id, content });\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div id={classes.PageContainer}>\r\n            <EditorContainer\r\n                id={id}\r\n                editorClass={classes.PageEditorContainer}\r\n                editorButtonClass={''}\r\n                saveNote={saveNote}\r\n                content={content}\r\n                editorButtonSelection='full'\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageContainer;\r\n","import { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { Page } from '../../store/pageReducer';\r\nimport classes from './PageMenu.module.css';\r\n\r\ninterface PropTypes {\r\n    props: { containerToggle: () => void };\r\n    showPage: (id: string) => {};\r\n    deletePage: (id: string) => {};\r\n    pages: Page[];\r\n    currentPageId: string;\r\n    hideBoard: () => {};\r\n}\r\n\r\nconst PageMenu = (props: PropTypes) => {\r\n    const itemClickHandler = (id: string) => {\r\n        props.showPage(id);\r\n        props.hideBoard();\r\n        props.props.containerToggle();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.PageMenu}>\r\n            <ul>\r\n                {props.pages.filter(item => item.id !== props.currentPageId).map(item => {\r\n                    return (\r\n                        <li key={item.id}>\r\n                            <span onClick={() => itemClickHandler(item.id)}>{item.title || 'Untitled'}</span>\r\n                            <button className={classes.btn} onClick={() => props.deletePage(item.id)}>X</button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        pages: state.page.pages,\r\n        currentPageId: state.page.currentPageId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        showPage: (id: string) => dispatch({ type: 'SHOW_PAGE', id }),\r\n        deletePage: (id: string) => dispatch({ type: 'DELETE_PAGE', id }),\r\n        hideBoard: () => dispatch({ type: 'HIDE_BOARD' })\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageMenu);\r\n","import { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport State from '../../store/combinedState';\r\n\r\ninterface PropTypes {\r\n    props: { containerToggle: () => void };\r\n}\r\n\r\nconst BoardMenu = (props: PropTypes) => {\r\n    const boards = useSelector((state: State) => state.board.boards);\r\n    const boardState = useSelector((state: State) => state.board);\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = (id: string) => {\r\n        props.props.containerToggle();\r\n        dispatch({ type: 'SHOW_BOARD', id });\r\n        dispatch({ type: 'HIDE_PAGE' });\r\n    };\r\n\r\n    const createBoard = () => {\r\n        dispatch({ type: 'CREATE_BOARD' });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {Object.keys(boards).filter(item => boards[item].id !== boardState.currentBoardId).map(item => {\r\n                    return (\r\n                        <li key={boards[item].id}>\r\n                            <span onClick={() => clickHandler(boards[item].id)}>{boards[item].title || 'Untitled'}</span>\r\n                            <button onClick={() => dispatch({ type: 'DELETE_BOARD', id: boards[item].id })}>X</button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <button onClick={createBoard}>Create New Board</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardMenu;\r\n","import { useState, useRef } from 'react';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nimport PageMenu from '../PageMenu/PageMenu';\r\nimport BoardMenu from '../BoardMenu/BoardMenu';\r\nimport classes from './MenuContainer.module.css';\r\n\r\nconst MenuContainer = () => {\r\n    const [showPagesMenu, setShowPagesMenu] = useState(true);\r\n    const [showFull, setShowFull] = useState(false);\r\n\r\n    const showPages = () => {\r\n        setShowPagesMenu(true);\r\n    };\r\n\r\n    const showBoard = () => {\r\n        setShowPagesMenu(false);\r\n    };\r\n\r\n    const containerRef = useRef(null);\r\n\r\n    const duration = 500;\r\n\r\n    const transitionStyles: { [id: string]: React.CSSProperties } = {\r\n        entering: { transform: 'translateY(300px)' },\r\n        entered: { transform: 'translateY(300px)' },\r\n        exited: { visibility: 'hidden' }\r\n    };\r\n\r\n    const defaultStyle = {\r\n        transition: `transform ${duration} ease-in`,\r\n        transform: 'translateY(0)'\r\n    };\r\n\r\n    const containerToggle = () => {\r\n        setShowFull(prevState => !prevState);\r\n    };\r\n\r\n    const props = {\r\n        containerToggle\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Transition in={showFull} timeout={duration} nodeRef={containerRef}>\r\n                {(state) => (\r\n                    <div style={{ ...defaultStyle, ...transitionStyles[state] }} id={classes.MenuContainer} ref={containerRef}>\r\n                        <div id={classes.MenuButtonContainer}>\r\n                            <button className={showPagesMenu ? classes.active : undefined} onClick={showPages}>Pages</button>\r\n                            <button className={!showPagesMenu ? classes.active : undefined} onClick={showBoard}>Board</button>\r\n                        </div>\r\n                        {showPagesMenu ? <PageMenu props={props} /> : <BoardMenu props={props} />}\r\n                    </div>\r\n                )}\r\n            </Transition>\r\n            <div id={classes.MenuToggle} className={showFull ? classes.expanded : classes.collapsed} onClick={containerToggle} aria-label={!showFull ? 'Expand Menu' : 'Collapse Menu'}></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MenuContainer;\r\n","import classes from \"./NoteMenuItem.module.css\";\r\n\r\ninterface PropTypes {\r\n    children: any;\r\n    clickFunction: () => void;\r\n}\r\n\r\nconst NoteMenuItem = (props: PropTypes) => {\r\n    return <button onClick={props.clickFunction} className={classes.NoteMenuItem}>{props.children}</button>\r\n};\r\n\r\nexport default NoteMenuItem;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport classes from './NoteMenu.module.css';\r\nimport NoteMenuItem from './NoteMenuItem/NoteMenuItem';\r\nimport State from '../../../../store/combinedState';\r\n\r\nconst noteColors = [\r\n    { name: 'Original', color: '' },\r\n    { name: 'Blue', color: 'blue' },\r\n    { name: 'Green', color: 'green' },\r\n    { name: 'Pink', color: 'pink' }\r\n];\r\n\r\ntype LockTypes = 'editor' | 'position' | 'delete';\r\n\r\nconst lockTypes: LockTypes[] = ['editor', 'position', 'delete'];\r\n\r\ninterface PropTypes {\r\n    id: string;\r\n    hideMenu: () => void;\r\n}\r\n\r\nconst NoteMenu = (props: PropTypes) => {\r\n    const dispatch = useDispatch();\r\n    const locks = useSelector((state: State) => state.board.boards[state.board.currentBoardId].notes[props.id].locks);\r\n    const [showColorMenu, setShowColorMenu] = useState(false);\r\n    const [showLockMenu, setShowLockMenu] = useState(false);\r\n\r\n    // Change Note color function\r\n    const changeNoteColor = (color: string) => {\r\n        dispatch({ type: 'CHANGE_NOTE_COLOR', noteId: props.id, color });\r\n    };\r\n\r\n    const toggleColorMenu = () => {\r\n        setShowColorMenu(prevState => !prevState);\r\n    };\r\n\r\n    // Lock function, prevent note from moving and/or being deleted\r\n    const lockToggle = (lockType: string) => {\r\n        dispatch({ type: 'TOGGLE_NOTE_LOCK', noteId: props.id, lockType });\r\n    }\r\n\r\n    const toggleLockMenu = () => {\r\n        setShowLockMenu(prevState => !prevState);\r\n    };\r\n\r\n    const deleteNote = () => {\r\n        if (locks.delete) return;\r\n        dispatch({ type: 'DELETE_NOTE', id: props.id });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.NoteMenu}>\r\n            <NoteMenuItem clickFunction={toggleColorMenu}>Change Note Color</NoteMenuItem>\r\n            {showColorMenu ? <div className={classes.NoteSubMenu}>\r\n                {noteColors.map(item => (\r\n                    <NoteMenuItem key={item.name} clickFunction={() => changeNoteColor(item.color)}>\r\n                        {item.name}\r\n                    </NoteMenuItem>\r\n                ))}\r\n            </div> : null}\r\n            <NoteMenuItem clickFunction={toggleLockMenu}>Lock</NoteMenuItem>\r\n            {showLockMenu ? <div className={classes.NoteSubMenu}>\r\n                {lockTypes.map(item => (\r\n                    <NoteMenuItem key={item} clickFunction={() => lockToggle(item)}>\r\n                        {locks[item] ? <div className={classes.LockMenuItem}><div className=\"fas fa-lock\"></div><p>{item}</p></div> : item}\r\n                    </NoteMenuItem>\r\n                ))}\r\n            </div> : null}\r\n            <NoteMenuItem clickFunction={deleteNote}>Delete</NoteMenuItem>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default NoteMenu;\r\n","import { SyntheticEvent, useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport EditorContainer from '../../EditorContainer/EditorContainer';\r\n\r\nimport classes from \"./Note.module.css\";\r\nimport State from '../../../store/combinedState';\r\nimport NoteMenu from './NoteMenu/NoteMenu';\r\n\r\ninterface PropTypes {\r\n    setDraggingState: (state: boolean) => void;\r\n    zIndex: number;\r\n    containerWidth: number;\r\n    containerHeight: number;\r\n    dragging: boolean;\r\n    id: string;\r\n    top: number;\r\n    left: number;\r\n    noteFocus: { id: string, inFocus: boolean };\r\n    setNoteFocus: any;\r\n}\r\n\r\nconst Note = (props: PropTypes) => {\r\n    const boardId = useSelector((state: State) => state.board.currentBoardId);\r\n    const note = useSelector((state: State) => state.board.boards[boardId].notes[props.id]);\r\n    const [diffX, setDiffX] = useState(0);\r\n    const [diffY, setDiffY] = useState(0);\r\n    const [focus, setFocus] = useState(false);\r\n    const zIndex = useSelector(() => note.zIndex);\r\n    const color = useSelector(() => note.color);\r\n    const [style, setStyle] = useState({ zIndex, top: props.top || 20, left: props.left || 20 });\r\n    const locks = useSelector(() => note.locks);\r\n    const [grabDivStyle, setGrabDivStyle] = useState(locks.position ? { cursor: 'default' } : { cursor: 'grab' });\r\n    const dispatch = useDispatch();\r\n    const [showEditorButtons, setShowEditorButtons] = useState(false);\r\n    const [showNoteMenu, setShowNoteMenu] = useState(false);\r\n    const [editorButtonContainerClass, setEditorButtonContainerClass] = useState(classes.NoteButtonContainer);\r\n\r\n    useEffect(() => {\r\n        if (props.noteFocus.inFocus && props.noteFocus.id === note.id) {\r\n            setShowEditorButtons(true);\r\n        } else {\r\n            setShowEditorButtons(false);\r\n            setShowNoteMenu(false);\r\n        }\r\n    }, [props.noteFocus, note.id]);\r\n\r\n    useEffect(() => {\r\n        if (locks.position) {\r\n            setGrabDivStyle({ cursor: 'default' })\r\n        } else {\r\n            setGrabDivStyle({ cursor: 'grab' });\r\n        }\r\n    }, [locks.position]);\r\n\r\n    const dragStart = (e: any) => {\r\n        if (locks.position) return;\r\n\r\n        e.stopPropagation();\r\n        setDiffX(e.screenX - e.target.getBoundingClientRect().left);\r\n        setDiffY(e.screenY - e.target.getBoundingClientRect().top);\r\n\r\n        props.setDraggingState(true);\r\n        setFocus(true);\r\n        setGrabDivStyle({ cursor: 'grabbing' });\r\n        zIndexHandler();\r\n    };\r\n\r\n    const zIndexHandler = () => {\r\n        if (zIndex === props.zIndex) return;\r\n        dispatch({ type: 'UPDATE_NOTE_ZINDEX', noteId: props.id, zIndex: props.zIndex + 1 });\r\n        dispatch({ type: 'UPDATE_BOARD_ZINDEX', zIndex: props.zIndex + 1 });\r\n        setStyle({ ...style, zIndex: props.zIndex + 1 });\r\n    };\r\n\r\n    const onDrag = (e: any) => {\r\n        if (locks.position) return;\r\n\r\n        if (props.dragging && focus) {\r\n            const APP_MENU_HEIGHT = 105;\r\n            let top = e.screenY - diffY - APP_MENU_HEIGHT + window.scrollY;\r\n            let left = e.screenX - diffX + window.scrollX;\r\n\r\n            if (top < 20) top = 20;\r\n            if (left < 20) left = 20;\r\n\r\n            setShowEditorButtons(false);\r\n            setShowNoteMenu(false);\r\n            setStyle({ ...style, left, top });\r\n        }\r\n    };\r\n\r\n    const setEditorButtonClass = (right: number, top: number) => {\r\n        const classList: string[] = [classes.NoteButtonContainer];\r\n\r\n        if (right > (window.innerWidth * 0.85)) {\r\n            classList.push(classes.right);\r\n        }\r\n\r\n        if (top < ((window.innerHeight - 105) * 0.1)) {\r\n            classList.push(classes.bottom);\r\n        }\r\n\r\n        setEditorButtonContainerClass(classList.join(' '));\r\n    }\r\n\r\n    const dragEnd = (e: any) => {\r\n        if (locks.position) return;\r\n\r\n        let right = e.currentTarget.getBoundingClientRect().right + window.scrollX;\r\n        let bottom = e.currentTarget.getBoundingClientRect().bottom + window.scrollY;\r\n\r\n        setEditorButtonClass(right - window.scrollX, style.top);\r\n\r\n        setFocus(false);\r\n        props.setDraggingState(false);\r\n        setGrabDivStyle({ cursor: 'grab' });\r\n\r\n        if (bottom >= props.containerHeight + 80) {\r\n            dispatch({ type: 'UPDATE_BOARD_SIZE', direction: 'height', size: bottom - 80 });\r\n        }\r\n\r\n        if (right >= props.containerWidth - 20) {\r\n            dispatch({ type: 'UPDATE_BOARD_SIZE', direction: 'width', size: right + 20 });\r\n        }\r\n\r\n        const noteMoved = style.left !== note.left || style.top !== note.top || right !== note.right || bottom !== note.bottom;\r\n\r\n        if (noteMoved) {\r\n            const position = { left: style.left, top: style.top, right, bottom };\r\n            dispatch({ type: 'UPDATE_NOTE_POSITION', noteId: props.id, position });\r\n        }\r\n    };\r\n\r\n    const saveNote = useCallback((id: string, content: string) => {\r\n        dispatch({ type: 'SAVE_NOTE_CONTENT', noteId: id, content });\r\n    }, [dispatch]);\r\n\r\n    const clickHandler = (e: SyntheticEvent) => {\r\n        e.stopPropagation();\r\n        props.setNoteFocus({ id: note.id, inFocus: true });\r\n        zIndexHandler();\r\n    };\r\n\r\n    const toggleNoteMenu = () => {\r\n        setShowNoteMenu((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={[classes.Note, classes[color]].join(' ')}\r\n            style={style}\r\n            onMouseMove={onDrag}\r\n            onMouseUp={dragEnd}\r\n            onClick={clickHandler}\r\n        >\r\n            <div\r\n                className={classes.NoteGrabContainer}\r\n                onMouseDown={dragStart}\r\n                style={grabDivStyle}\r\n            ><hr /></div>\r\n            <EditorContainer\r\n                id={props.id}\r\n                content={note.content}\r\n                editorButtonClass={editorButtonContainerClass}\r\n                editorClass={classes.NoteEditorContainer}\r\n                saveNote={saveNote}\r\n                showButtons={showEditorButtons}\r\n                editorButtonSelection='basic'\r\n                lockEditor={locks.editor}\r\n            />\r\n            {showEditorButtons ?\r\n                <button onClick={toggleNoteMenu} className={classes.NoteMenuButton}>\r\n                    <svg viewBox=\"0 0 515.555 515.555\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"menuTitle menuDesc\" role=\"menu\">\r\n                        <title id=\"menuTitle\">Note Menu Button</title>\r\n                        <desc id=\"menuDesc\">Opens menu for the corresponding note</desc>\r\n                        <path d=\"M303.347 18.875c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0M303.347 212.209c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0M303.347 405.541c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0\" />\r\n                    </svg>\r\n                </button> : null\r\n            }\r\n            {showNoteMenu ? <NoteMenu id={props.id} hideMenu={() => setShowNoteMenu(false)} /> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport classes from './NoteBoard.module.css';\r\nimport Note from './Note/Note';\r\n\r\nimport State from '../../store/combinedState';\r\n\r\ninterface PropTypes {\r\n    id: string;\r\n}\r\n\r\ntype boardDimensions = {\r\n    height: number | string;\r\n    width: number | string;\r\n}\r\n\r\nconst NoteBoard = (props: PropTypes) => {\r\n    const [dragging, setDragging] = useState(false);\r\n    const zIndex = useSelector((state: State) => state.board.boards[props.id].maxZIndex);\r\n    const width = useSelector((state: State) => state.board.boards[props.id].width);\r\n    const height = useSelector((state: State) => state.board.boards[props.id].height);\r\n    const [style, setStyle] = useState<boardDimensions>({ width: width, height: height });\r\n    const dispatch = useDispatch();\r\n    const notes = useSelector((state: State) => state.board.boards[props.id].notes);\r\n    const keys = useSelector(() => Object.keys(notes));\r\n    const [noteFocus, setNoteFocus] = useState({ id: '', inFocus: false });\r\n\r\n    const setDraggingState = (value: boolean) => {\r\n        setDragging(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const HEADER_HEIGHT = 105;\r\n        let heightValue: string | number = height;\r\n        let widthValue: string | number = width;\r\n\r\n        if (heightValue < window.innerHeight - HEADER_HEIGHT) {\r\n            heightValue = 'calc(100% - ' + HEADER_HEIGHT + 'px)';\r\n        }\r\n\r\n        if (widthValue < window.innerWidth) {\r\n            widthValue = '100%';\r\n        }\r\n\r\n        setStyle({ height: heightValue, width: widthValue });\r\n    }, [height, width]);\r\n\r\n    const addNote = () => {\r\n        dispatch({ type: 'CREATE_NOTE' });\r\n        dispatch({ type: 'UPDATE_BOARD_ZINDEX', zIndex: zIndex + 1 });\r\n    };\r\n\r\n    return (\r\n        <div id={classes.NoteBoard} style={style} onClick={() => setNoteFocus({ id: '', inFocus: false })}>\r\n            {keys.map(item => {\r\n                return (\r\n                    <Note\r\n                        key={notes[item].id}\r\n                        id={notes[item].id}\r\n                        left={notes[item].left}\r\n                        top={notes[item].top}\r\n                        dragging={dragging}\r\n                        setDraggingState={setDraggingState}\r\n                        zIndex={zIndex}\r\n                        containerWidth={width}\r\n                        containerHeight={height}\r\n                        noteFocus={noteFocus}\r\n                        setNoteFocus={setNoteFocus}\r\n                    />\r\n                );\r\n            })}\r\n            <button id={classes.AddButton} onClick={addNote} aria-label='Add Note'>+</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteBoard;\r\n","import './App.css';\nimport Header from './components/Header/Header';\nimport PageContainer from './containers/PageContainer/PageContainer';\nimport MenuContainer from './components/MenuContainer/MenuContainer';\nimport NoteBoard from './containers/NoteBoard/NoteBoard';\n\nimport { connect } from 'react-redux';\n\ninterface PropTypes {\n\tcurrentPageId: string;\n\tshowEditor: boolean;\n\tcurrentBoardId: string;\n\tshowBoard: boolean;\n};\n\nfunction App(props: PropTypes) {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<MenuContainer />\n\t\t\t{(props.showEditor && props.currentPageId !== '') && <PageContainer key={props.currentPageId} />}\n\t\t\t{(props.showBoard && props.currentBoardId !== '') && <NoteBoard key={props.currentBoardId} id={props.currentBoardId} />}\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\tcurrentPageId: state.page.currentPageId,\n\t\tshowEditor: state.page.showEditor,\n\t\tshowBoard: state.board.showBoard,\n\t\tcurrentBoardId: state.board.currentBoardId\n\t};\n};\n\nexport default connect(mapStateToProps)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateLocalStorage = (key: string, value: any) => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n","import { AnyAction } from 'redux';\r\nimport { v4 } from 'uuid';\r\n\r\nimport { updateLocalStorage } from './utility';\r\n\r\nexport interface Page {\r\n    id: string;\r\n    title: string;\r\n    content: string;\r\n};\r\n\r\nexport interface State {\r\n    pages: Page[];\r\n    currentPageId: string;\r\n    showEditor: boolean;\r\n};\r\n\r\nconst initialState: State = {\r\n    pages: localStorage.getItem('pages') ? JSON.parse(localStorage.getItem('pages') || '[]') : [],\r\n    currentPageId: '',\r\n    showEditor: !!localStorage.getItem('pages')\r\n};\r\n\r\nconst findPageIndex = (state: State, id: string): number => {\r\n    for (let i = 0; i < state.pages.length; i++) {\r\n        if (state.pages[i].id === id) {\r\n            return i;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nconst savePage = (state: State, [id, title = '', content = '']: string[]) => {\r\n    const newPageState = state.pages.map(item => {\r\n        if (item.id === id) {\r\n            if (content) item.content = content;\r\n            if (title) item.title = title;\r\n        }\r\n        return item;\r\n    });\r\n\r\n    return newPageState;\r\n};\r\n\r\nconst deletePage = (state: State, id: string) => {\r\n    const newPagesState = [...state.pages];\r\n    newPagesState.splice(findPageIndex(state, id), 1);\r\n    return newPagesState;\r\n};\r\n\r\nconst updatePages = (state: State, fn: (state: State, action: any) => {}, updateAction: any) => {\r\n    const newPage = fn(state, updateAction);\r\n    updateLocalStorage('pages', newPage);\r\n    return { ...state, pages: newPage };\r\n};\r\n\r\nconst pageReducer = (state = initialState, action: AnyAction) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PAGE':\r\n            const newPages = state.pages.concat({ id: v4(), title: '', content: '' });\r\n            updateLocalStorage('pages', newPages);\r\n            return {\r\n                ...state,\r\n                pages: newPages\r\n            };\r\n        case 'SAVE_PAGE':\r\n            return updatePages(state, savePage, [action.id, null, action.content]);\r\n        case 'SAVE_PAGE_TITLE':\r\n            return updatePages(state, savePage, [action.id, action.title, null]);\r\n        case 'DELETE_PAGE':\r\n            return updatePages(state, deletePage, action.id);\r\n        case 'SHOW_PAGE':\r\n            return { ...state, currentPageId: action.id, showEditor: true };\r\n        case 'HIDE_PAGE':\r\n            return { ...state, currentPageId: '', showEditor: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default pageReducer;\r\n","import { v4 } from 'uuid';\r\n\r\nimport { updateLocalStorage } from './utility';\r\n\r\nexport interface Note {\r\n    id: string;\r\n    content: string;\r\n    left: number;\r\n    top: number;\r\n    right: number;\r\n    bottom: number;\r\n    zIndex: number;\r\n    color: string;\r\n    locks: {\r\n        editor: boolean,\r\n        position: boolean,\r\n        delete: boolean\r\n    }\r\n}\r\n\r\ntype LockTypes = 'editor' | 'position' | 'delete';\r\n\r\ninterface Board {\r\n    title: string;\r\n    notes: { [name: string]: Note };\r\n    id: string;\r\n    width: number;\r\n    height: number;\r\n    maxZIndex: number;\r\n}\r\n\r\nexport interface State {\r\n    boards: { [name: string]: Board };\r\n    showBoard: boolean;\r\n    currentBoardId: string;\r\n}\r\n\r\nconst initialState: State = {\r\n    boards: localStorage.getItem('boards') ? JSON.parse(localStorage.getItem('boards') || '{}') : {},\r\n    showBoard: false,\r\n    currentBoardId: ''\r\n};\r\n\r\ninterface BoardActions {\r\n    title: string;\r\n    id: string;\r\n    zIndex: number;\r\n    direction: string;\r\n    size: number;\r\n}\r\n\r\ninterface NoteActions {\r\n    noteId: string;\r\n    position: { left: number, top: number, right: number, bottom: number };\r\n    content: string;\r\n    color: string;\r\n    lockType: LockTypes;\r\n}\r\n\r\ninterface ReducerActions extends BoardActions, NoteActions {\r\n    type: string;\r\n}\r\n\r\nconst createNewNote = (state: State) => {\r\n    const id = v4();\r\n    const newZIndex = state.boards[state.currentBoardId].maxZIndex + 1;\r\n    const tempBoardsState = { ...state.boards };\r\n    const notes = tempBoardsState[state.currentBoardId].notes;\r\n    notes[id] = {\r\n        id, content: '', left: 0, top: 0, right: 0, bottom: 0, zIndex: newZIndex, color: '', locks: { editor: false, position: false, delete: false }\r\n    };\r\n\r\n    return tempBoardsState;\r\n};\r\n\r\nconst createTempNote = (state: State, id: string, changeValue: {}) => {\r\n    return { ...state.boards[state.currentBoardId].notes[id], ...changeValue };\r\n};\r\n\r\nconst updateNote = (state: State, id: string, noteValue: Note) => {\r\n    return {\r\n        ...state.boards,\r\n        [state.currentBoardId]: {\r\n            ...state.boards[state.currentBoardId],\r\n            notes: {\r\n                ...state.boards[state.currentBoardId].notes,\r\n                [id]: {\r\n                    ...noteValue\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nconst updateBoard = (state: State, board: { [name: string]: Board }, newBoardValue: {}) => {\r\n    return {\r\n        ...board,\r\n        [state.currentBoardId]: {\r\n            ...board[state.currentBoardId],\r\n            ...newBoardValue\r\n        }\r\n    };\r\n};\r\n\r\n// Takes care of updating state and local storage, something that is needed in each state update\r\nconst updateBoardReducer = (state: State, newBoard: any) => {\r\n    updateLocalStorage('boards', newBoard);\r\n    return {\r\n        ...state,\r\n        boards: newBoard\r\n    };\r\n};\r\n\r\nconst updateNoteInReducer = (state: State, id: string, changeValue: any) => {\r\n    const note = createTempNote(state, id, changeValue);\r\n    const updatedBoard = updateNote(state, id, note);\r\n\r\n    return updateBoardReducer(state, updatedBoard);\r\n};\r\n\r\nconst boardReducer = (state = initialState, action: ReducerActions) => {\r\n    switch (action.type) {\r\n        case 'CREATE_BOARD': {\r\n            if (Object.keys(state.boards).length >= 2) return state;\r\n            const id = v4();\r\n            const newBoards = { ...state.boards }\r\n            newBoards[id] = { title: '', notes: {}, id, width: 0, height: 0, maxZIndex: 1 };\r\n\r\n            return updateBoardReducer(state, newBoards);\r\n        }\r\n        case 'SAVE_BOARD_TITLE': {\r\n            const newBoards = {\r\n                ...state.boards,\r\n                [state.currentBoardId]: {\r\n                    ...state.boards[state.currentBoardId],\r\n                    title: action.title\r\n                }\r\n            };\r\n            return updateBoardReducer(state, newBoards);\r\n        }\r\n        case 'UPDATE_BOARD_ZINDEX':\r\n            return updateBoardReducer(state, updateBoard(state, state.boards, { maxZIndex: action.zIndex }));\r\n        case 'UPDATE_BOARD_SIZE':\r\n            return updateBoardReducer(state, updateBoard(state, state.boards, { [action.direction]: action.size }));\r\n        case 'SHOW_BOARD':\r\n            return { ...state, currentBoardId: action.id, showBoard: true };\r\n        case 'HIDE_BOARD':\r\n            return { ...state, currentBoardId: '', showBoard: false };\r\n        case 'DELETE_BOARD':\r\n            const newBoards = { ...state.boards };\r\n            delete newBoards[action.id];\r\n\r\n            return updateBoardReducer(state, newBoards);\r\n        default:\r\n            return noteReducer(state, action);\r\n    }\r\n};\r\n\r\nconst noteReducer = (state = initialState, action: ReducerActions) => {\r\n    switch (action.type) {\r\n        case 'CREATE_NOTE':\r\n            return updateBoardReducer(state, createNewNote(state));\r\n        case 'UPDATE_NOTE_POSITION':\r\n            return updateNoteInReducer(state, action.noteId, { ...action.position });\r\n        case 'UPDATE_NOTE_ZINDEX':\r\n            return updateNoteInReducer(state, action.noteId, { zIndex: action.zIndex });\r\n        case 'SAVE_NOTE_CONTENT':\r\n            return updateNoteInReducer(state, action.noteId, { content: action.content });\r\n        case 'CHANGE_NOTE_COLOR':\r\n            return updateNoteInReducer(state, action.noteId, { color: action.color });\r\n        case 'TOGGLE_NOTE_LOCK':\r\n            const lockPath = state.boards[state.currentBoardId].notes[action.noteId].locks\r\n\r\n            return updateNoteInReducer(state, action.noteId, { locks: { ...lockPath, [action.lockType]: !lockPath[action.lockType] } });\r\n        case 'DELETE_NOTE': {\r\n            const notes = { ...state.boards[state.currentBoardId].notes }\r\n            delete notes[action.id];\r\n            const updatedBoard = {\r\n                ...state.boards,\r\n                [state.currentBoardId]: {\r\n                    ...state.boards[state.currentBoardId],\r\n                    notes\r\n                }\r\n            }\r\n\r\n            return updateBoardReducer(state, updatedBoard);\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default boardReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport pageReducer from './store/pageReducer';\nimport boardReducer from './store/boardReducer';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst rootReducer = combineReducers({\n  page: pageReducer,\n  board: boardReducer\n});\n\nconst store = createStore(rootReducer);\n// , (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuContainer_MenuToggle__8D7uP\",\"expanded\":\"MenuContainer_expanded__32-Br\",\"collapsed\":\"MenuContainer_collapsed__2SHcZ\",\"MenuContainer\":\"MenuContainer_MenuContainer__2Y2IC\",\"MenuButtonContainer\":\"MenuContainer_MenuButtonContainer__2kwCO\",\"active\":\"MenuContainer_active__qGZgx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InlineButton\":\"EditorButton_InlineButton__14yPu\",\"InlineSubButton\":\"EditorButton_InlineSubButton__3lgyP\",\"active\":\"EditorButton_active__1z0YK\",\"ButtonWithMenuContainer\":\"EditorButton_ButtonWithMenuContainer__1h3gf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteMenu\":\"NoteMenu_NoteMenu__g5tSX\",\"NoteSubMenu\":\"NoteMenu_NoteSubMenu__1BGB5\",\"LockMenuItem\":\"NoteMenu_LockMenuItem__99Mr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainHeader\":\"Header_MainHeader__1dx0c\",\"CreateNote\":\"Header_CreateNote__1HJgc\",\"TitleContainer\":\"Header_TitleContainer__3bySe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageEditorContainer\":\"PageContainer_PageEditorContainer__Ypac8\",\"PageContainer\":\"PageContainer_PageContainer__15tHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"PageMenu_btn__17XWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteBoard\":\"NoteBoard_NoteBoard__3CFqR\",\"AddButton\":\"NoteBoard_AddButton__fHatq\"};"],"sourceRoot":""}