{"version":3,"sources":["containers/Title/Title.module.css","containers/ColorContainer/ColorContainer.module.css","components/MenuContainer/AddButton/AddButton.module.css","components/OpenMenuButton/OpenMenuButton.module.css","components/ConfirmationModal/ConfirmationModal.module.css","containers/EditorButtonContainer/EditorButtonContainer.module.css","containers/NoteBoard/Note/Note.module.css","containers/Title/Title.tsx","components/Header/Header.tsx","containers/ColorContainer/ColorContainer.tsx","containers/EditorButtonContainer/EditorButton/EditorButton.tsx","containers/EditorButtonContainer/EditorDropdown/EditorDropdown.tsx","containers/EditorButtonContainer/EditorCategory/EditorCategory.tsx","containers/EditorButtonContainer/EditorButtonContainer.tsx","containers/EditorContainer/EditorContainer.tsx","containers/EditorButtonContainer/EdtiorButtonInformation/EditorButtonLayouts.ts","containers/EditorButtonContainer/EdtiorButtonInformation/EditorButtonInfo.ts","containers/PageContainer/PageContainer.tsx","components/MenuContainer/AddButton/AddButton.tsx","components/OpenMenuButton/OpenMenuButton.tsx","components/MenuContainer/MenuItem/MenuItem.tsx","components/MenuContainer/PageMenu/PageMenu.tsx","components/MenuContainer/BoardMenu/BoardMenu.tsx","components/MenuContainer/MenuContainer.tsx","containers/NoteBoard/Note/NoteMenu/NoteMenuItem/NoteMenuItem.tsx","components/ConfirmationModal/ConfirmationModal.tsx","containers/NoteBoard/Note/NoteMenu/NoteMenu.tsx","containers/NoteBoard/Note/Note.tsx","containers/NoteBoard/NoteBoard.tsx","App.tsx","reportWebVitals.ts","store/utility.ts","store/pageReducer.ts","store/boardReducer.ts","index.tsx","components/MenuContainer/MenuContainer.module.css","components/MenuContainer/MenuItem/MenuItem.module.css","containers/NoteBoard/NoteBoard.module.css","containers/NoteBoard/Note/NoteMenu/NoteMenu.module.css","components/MenuContainer/Menu.module.css","containers/PageContainer/PageContainer.module.css","containers/NoteBoard/Note/NoteMenu/NoteMenuItem/NoteMenuItem.module.css","components/Header/Header.module.css"],"names":["module","exports","Title","props","title","useSelector","state","page","currentPageId","pages","filter","item","id","board","currentBoardId","boards","type","dispatch","useDispatch","useState","titleValue","setTitleValue","inputRef","useRef","ref","classes","TitleInput","value","onChange","e","target","placeholder","onBlur","current","scrollLeft","Header","currentId","MainHeader","TitleContainer","ColorContainer","className","data","basic","map","onClick","name","preventDefault","changeColor","showButton","clickHandler","style","background","color","EditorButton","active","setActive","editorState","getSelection","selection","setSelection","setStyle","useEffect","styleType","getCurrentInlineStyle","has","hasMenu","anchorKey","getCurrentContent","getBlockForKey","getAnchorKey","getType","button","icon","join","onMouseDown","fn","aria-label","toLowerCase","ButtonWithMenuContainer","EditorSubButton","showValue","EditorDropdown","default","setValue","checkInlineStyles","useCallback","options","option","checkBlockStyles","selectOption","EditorCategory","showMenu","setShowMenu","CategoryMenu","children","prevState","textColorArr","highlightColorArr","fontSizeArr","fontSizes","sizes","colorData","push","headers","EditorButtonContainer","showTextColor","setShowTextColor","showHighlightColor","setShowHighlightColor","onInlineStyleClick","command","setEditorState","RichUtils","toggleInlineStyle","removeComponentLoadedState","removeInlineStyle","styleArr","contentWithoutStyles","reduce","newContentState","Modifier","contentState","EditorState","colorChange","colorArr","newStyle","applyInlineStyle","fontSizeChange","size","changeScriptAlignment","opposite","newEditorState","onBlockStyleClick","toggleBlockType","onUndo","undo","onRedo","redo","buttonStyles","btnStyle","btnType","defaultValue","toString","selectStyle","inlineButton","blockButton","ButtonContainer","editorButtonClass","editorButtonSelection","categoryName","contents","textColorMap","highlightColorMap","fontSizeMap","backgroundColor","fontSize","EditorContainer","saveNote","content","editorClass","showButtons","lockEditor","createWithContent","convertFromRaw","JSON","parse","createEmpty","editorContainerRef","appStart","setAppStart","savingStr","setSavingStr","editorRef","styleMap","textDecoration","verticalAlign","timer","setTimeout","stringify","convertToRaw","clearTimeout","setAppState","addEventListener","removeEventListener","undefined","focus","handleKeyCommand","newState","customStyleMap","keyBindingFn","key","blockType","getStartKey","onTab","replaceText","getDefaultKeyBinding","readOnly","utility","basicInlineLayout","colorInlineLayout","fullInlineLayout","selectLayout","basicBlockLayout","fullBlockLayout","basicOverallLayout","fullOverallLayout","colorsCategory","sizeCategory","blockCategory","smallCompactLayout","mediumCompactLayout","PageContainer","layout","setLayout","setLayoutWidth","width","window","innerWidth","PageEditorContainer","PageEditorButtonContainer","AddButton","toUpperCase","OpenMenuButton","click","menuClass","viewBox","aria-labelledby","role","d","MenuItem","onMouseLeave","MenuPageImage","MenuBoardImage","MenuItemButton","stopPropagation","delete","SubMenu","PageMenu","Menu","toggle","BoardMenu","boardState","Object","keys","MenuContainer","showPagesMenu","setShowPagesMenu","showFull","setShowFull","showPages","showBoard","containerRef","transitionStyles","entering","transform","entered","exited","visibility","defaultStyle","transition","containerToggle","Transition","in","timeout","nodeRef","MenuButtonContainer","MenuToggle","expanded","collapsed","NoteMenuItem","clickFunction","subMenuItem","NoteSubMenuItem","addedClasses","ConfirmationModal","bodyFunction","modalClass","confirmFunction","cancelFunction","noteColors","lockTypes","NoteMenu","locks","notes","showColorMenu","setShowColorMenu","showLockMenu","setShowLockMenu","showDeleteModal","setShowDeleteModal","handleClickEffects","NoteSubMenu","noteId","changeNoteColor","lockType","lockToggle","LockMenuItem","DeleteModal","Note","boardId","note","diffX","setDiffX","diffY","setDiffY","setFocus","zIndex","top","left","position","cursor","grabDivStyle","setGrabDivStyle","showEditorButtons","setShowEditorButtons","showNoteMenuToggle","setShowNoteMenuToggle","showNoteMenu","setShowNoteMenu","NoteButtonContainer","editorButtonContainerClass","setEditorButtonContainerClass","setEditorButtonState","editor","noteFocus","inFocus","zIndexHandler","dragging","onMouseMove","screenY","scrollY","screenX","scrollX","onMouseUp","right","currentTarget","getBoundingClientRect","bottom","tempStyle","removeNoteWidth","classList","innerHeight","setEditorButtonClass","setDraggingState","containerHeight","direction","containerWidth","checkAndUpdateBoardSize","checkAndUpdateNotePosition","setNoteFocus","NoteGrabContainer","NoteEditorContainer","NoteMenuButton","hideMenu","NoteBoard","setDragging","maxZIndex","height","heightValue","widthValue","length","AddButtonArrowContainer","AddButtonArrowBody","AddButtonArrow","connect","showEditor","appClasses","setAppClasses","baseClass","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updateLocalStorage","localStorage","setItem","initialState","getItem","savePage","deletePage","newPagesState","splice","i","findPageIndex","updatePages","updateAction","newPage","pageReducer","action","newPages","v4","createNewNote","newZIndex","tempBoardsState","BOARD_PADDING","updateBoard","newBoardValue","updateBoardReducer","newBoard","updateNoteInReducer","changeValue","updatedBoard","noteValue","updateNote","createTempNote","noteReducer","lockPath","boardReducer","newBoards","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ece2461e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleInput\":\"Title_TitleInput__3JHxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorContainer\":\"ColorContainer_ColorContainer__1L_ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddButton\":\"AddButton_AddButton__3qbta\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OpenMenuButton\":\"OpenMenuButton_OpenMenuButton__7gbcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ConfirmationModal\":\"ConfirmationModal_ConfirmationModal__1pH55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonContainer\":\"EditorButtonContainer_ButtonContainer__veloK\",\"ButtonWithMenuContainer\":\"EditorButtonContainer_ButtonWithMenuContainer__2gIUb\",\"EditorButton\":\"EditorButtonContainer_EditorButton__2XgRm\",\"EditorSubButton\":\"EditorButtonContainer_EditorSubButton__3rbRw\",\"active\":\"EditorButtonContainer_active__2GX6w\",\"CategoryMenu\":\"EditorButtonContainer_CategoryMenu__TeFFf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Note\":\"Note_Note__2FwFU\",\"blue\":\"Note_blue__3WIEK\",\"green\":\"Note_green__1XbtZ\",\"pink\":\"Note_pink__1P1-l\",\"NoteEditorContainer\":\"Note_NoteEditorContainer__6q758\",\"NoteGrabContainer\":\"Note_NoteGrabContainer__3XDGp\",\"NoteButtonContainer\":\"Note_NoteButtonContainer__1SQfp\",\"right\":\"Note_right__1grwx\",\"bottom\":\"Note_bottom__ymkgG\",\"NoteMenuButton\":\"Note_NoteMenuButton__23o6K\"};","import React, { useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport classes from './Title.module.css';\r\nimport CombinedState from '../../store/combinedState';\r\n\r\ninterface PropTypes {\r\n    id: string;\r\n}\r\n\r\nconst Title = (props: PropTypes) => {\r\n    const title = useSelector((state: CombinedState) => {\r\n        if (state.page.currentPageId !== '') return state.page.pages.filter((item: any) => item.id === props.id)[0].title;\r\n        if (state.board.currentBoardId !== '') return state.board.boards[props.id].title;\r\n    });\r\n    const type = useSelector((state: CombinedState) => {\r\n        if (state.page.currentPageId !== '') return 'page';\r\n        if (state.board.currentBoardId !== '') return 'board';\r\n    });\r\n    const dispatch = useDispatch();\r\n    const [titleValue, setTitleValue] = useState(title || 'Untitled');\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const titleChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitleValue(e.target.value);\r\n        if (type === 'page') dispatch({ type: 'SAVE_PAGE_TITLE', id: props.id, title: e.target.value });\r\n        if (type === 'board') dispatch({ type: 'SAVE_BOARD_TITLE', title: e.target.value });\r\n    };\r\n\r\n    const blurHandler = () => {\r\n        if (inputRef.current) inputRef.current.scrollLeft = 0;\r\n    }\r\n\r\n    return (\r\n        <input ref={inputRef} id={classes.TitleInput} type=\"text\" value={titleValue} onChange={titleChangeHandler} placeholder='Untitled' onBlur={blurHandler} />\r\n    );\r\n};\r\n\r\nexport default Title;\r\n","import classes from './Header.module.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Title from '../../containers/Title/Title';\r\n\r\nexport const Header = () => {\r\n    const currentId = useSelector((state: any) => {\r\n        if (state.page.currentPageId !== '') return state.page.currentPageId;\r\n        if (state.board.currentBoardId !== '') return state.board.currentBoardId;\r\n        return '';\r\n    });\r\n\r\n    return (\r\n        <header id={classes.MainHeader}>\r\n            <div id={classes.TitleContainer}>\r\n                {currentId !== '' ? <Title key={currentId} id={currentId} /> : <p>Notes</p>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import classes from './ColorContainer.module.css';\r\nimport data from '../../colors.json';\r\nimport { SyntheticEvent } from 'react';\r\n\r\ninterface PropTyes {\r\n    type: string;\r\n    changeColor: (type: string, color: string) => void;\r\n    showButton: (type: string) => void\r\n}\r\n\r\nconst ColorContainer = (props: PropTyes) => {\r\n    const clickHandler = (e: SyntheticEvent, name: string) => {\r\n        e.preventDefault();\r\n        props.changeColor(props.type, name);\r\n        props.showButton(props.type);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.ColorContainer}>\r\n            <ul>\r\n                {data.basic.map(item => {\r\n                    return (\r\n                        <li\r\n                            key={item.name}\r\n                            onClick={(e) => clickHandler(e, item.name)}\r\n                        >\r\n                            <div style={{ background: item.color }}></div>\r\n                            {item.name}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ColorContainer;\r\n","import { SyntheticEvent, useEffect, useState } from 'react';\r\nimport { EditorState } from 'draft-js';\r\n\r\nimport ColorContainer from '../../ColorContainer/ColorContainer';\r\nimport classes from '../../EditorButtonContainer/EditorButtonContainer.module.css';\r\nimport data from '../../../colors.json';\r\n\r\ninterface PropTypes {\r\n    type: string;\r\n    icon: string | undefined;\r\n    color?: string;\r\n    hasMenu?: boolean;\r\n    fn: any;\r\n    showValue?: boolean;\r\n    showButton?: (type: string) => void;\r\n    editorState: EditorState;\r\n    styleType: string;\r\n}\r\n\r\nconst EditorButton = (props: PropTypes) => {\r\n    const [active, setActive] = useState(false);\r\n    const [selection, setSelection] = useState(props.editorState.getSelection());\r\n    const [style, setStyle] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (props.styleType === 'inline') {\r\n            setActive(props.editorState.getCurrentInlineStyle().has(props.type));\r\n\r\n            if (props.hasMenu) {\r\n                for (let color of data.basic) {\r\n                    if (props.editorState.getCurrentInlineStyle().has(`${color.name}-${props.type}`)) {\r\n                        setStyle({ color: color.color });\r\n                        return;\r\n                    } else {\r\n                        setStyle({});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.styleType === 'block' && props.type !== 'unstyled') {\r\n            const anchorKey = props.editorState.getCurrentContent().getBlockForKey(selection.getAnchorKey());\r\n            setActive(anchorKey && anchorKey.getType() === props.type);\r\n        }\r\n    }, [props.editorState, props.type, selection, props.styleType, props.hasMenu]);\r\n\r\n    useEffect(() => {\r\n        setSelection(props.editorState.getSelection());\r\n    }, [props.editorState]);\r\n\r\n    const clickHandler = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        props.fn(props.type);\r\n    };\r\n\r\n    let button = (\r\n        <button\r\n            className={[classes.EditorButton, `fas fa-${props.icon}`, active ? classes.active : null].join(' ')}\r\n            onMouseDown={clickHandler}\r\n            aria-label={props.type.toLowerCase()}\r\n            style={style}\r\n        ></button>\r\n    );\r\n\r\n    if (props.hasMenu) {\r\n        button = (\r\n            <div className={classes.ButtonWithMenuContainer}>\r\n                {button}\r\n                <button\r\n                    onMouseDown={() => props.showButton!(props.type)}\r\n                    className={classes.EditorSubButton}\r\n                    aria-label='Dropdown'\r\n                ><div></div></button>\r\n                {props.showValue ? <ColorContainer type={props.type} changeColor={props.fn} showButton={props.showButton!} /> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return button;\r\n};\r\n\r\nexport default EditorButton;\r\n","import { useState, useEffect, ChangeEvent, useCallback } from 'react';\r\nimport { EditorState } from 'draft-js';\r\n\r\ninterface PropTypes {\r\n    options: any[];\r\n    fn: any;\r\n    type: string;\r\n    default: string;\r\n    editorState: EditorState;\r\n    styleType: string;\r\n}\r\n\r\nconst EditorDropdown = (props: PropTypes) => {\r\n    const [value, setValue] = useState(props.default);\r\n    const [selection, setSelection] = useState(props.editorState.getSelection());\r\n\r\n    const setSelectValue = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const checkInlineStyles = useCallback((editorState: EditorState) => {\r\n        for (let option of props.options) {\r\n            // Currently font size is the only inline dropdown\r\n            if (editorState.getCurrentInlineStyle().has(`${option}-FONTSIZE`)) {\r\n                setValue(option);\r\n                return;\r\n            } else {\r\n                setValue(props.default);\r\n            }\r\n        }\r\n    }, [props.options, props.default]);\r\n\r\n    const checkBlockStyles = useCallback((editorState: EditorState, selection: any) => {\r\n        const anchorKey = editorState.getCurrentContent().getBlockForKey(selection.getAnchorKey());\r\n        for (let option of props.options) {\r\n            if (anchorKey && anchorKey.getType() === option) {\r\n                setValue(option);\r\n                return;\r\n            } else {\r\n                setValue('');\r\n            }\r\n        }\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        checkInlineStyles(props.editorState);\r\n        setSelection(props.editorState.getSelection());\r\n    }, [props.editorState, checkInlineStyles]);\r\n\r\n    useEffect(() => {\r\n        if (props.styleType === 'block') checkBlockStyles(props.editorState, selection);\r\n    }, [selection, props.editorState, checkBlockStyles, props.styleType]);\r\n\r\n\r\n    return (\r\n        <select aria-label={props.type.toLowerCase()} value={value} onChange={setSelectValue}>\r\n            <option value=''>---</option>\r\n            {props.options.map(selectOption => {\r\n                return <option\r\n                    key={selectOption}\r\n                    onClick={() => props.fn(selectOption)}\r\n                    value={selectOption}\r\n                >{selectOption}</option>\r\n            })}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default EditorDropdown;\r\n","import { useState } from 'react';\r\n\r\nimport classes from '../EditorButtonContainer.module.css';\r\n\r\ninterface PropTypes {\r\n    children: any;\r\n    name: string;\r\n    icon: string;\r\n}\r\n\r\nconst EditorCategory = (props: PropTypes) => {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setShowMenu(prevState => !prevState);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showMenu ? <div className={classes.CategoryMenu}>{props.children}</div> : null}\r\n            <button key={props.name} onClick={toggleMenu} className={[classes.EditorButton, `fas fa-${props.icon}`].join(' ')}></button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditorCategory;\r\n","import { useState } from 'react';\r\nimport { EditorState, RichUtils, Modifier } from 'draft-js';\r\n\r\nimport colorData from '../../colors.json';\r\nimport fontSizes from '../../font-sizes.json';\r\nimport classes from './EditorButtonContainer.module.css';\r\nimport EditorButton from './EditorButton/EditorButton';\r\nimport EditorDropdown from './EditorDropdown/EditorDropdown';\r\nimport EditorCategory from './EditorCategory/EditorCategory';\r\nimport { Style as ButtonStyle } from './EdtiorButtonInformation/EditorButtonInfo';\r\nimport { CategoryLayout } from './EdtiorButtonInformation/EditorButtonLayouts';\r\n\r\ninterface PropTypes {\r\n    editorState: EditorState;\r\n    setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\r\n    contentState: any;\r\n    removeComponentLoadedState: () => void;\r\n    editorButtonClass: string;\r\n    editorButtonSelection: (ButtonStyle | CategoryLayout)[];\r\n}\r\n\r\nconst textColorArr: string[] = [];\r\nconst highlightColorArr: string[] = [];\r\nconst fontSizeArr = fontSizes.sizes.map(item => `${item}-FONTSIZE`);\r\n\r\nfor (let item of colorData.basic) {\r\n    textColorArr.push(`${item.name}-TEXTCOLOR`);\r\n    highlightColorArr.push(`${item.name}-HIGHLIGHT`);\r\n}\r\n\r\nconst headers = [\r\n    'header-one',\r\n    'header-two',\r\n    'header-three',\r\n    'header-four',\r\n    'header-five',\r\n    'header-six'\r\n];\r\n\r\nconst DEFAULT_TEXT_SIZE = 16;\r\n\r\nconst EditorButtonContainer = (props: PropTypes) => {\r\n    const [showTextColor, setShowTextColor] = useState(false);\r\n    const [showHighlightColor, setShowHighlightColor] = useState(false);\r\n\r\n    const showButton = (type: string) => {\r\n        if (type === 'TEXTCOLOR') {\r\n            setShowTextColor(prevState => !prevState);\r\n        } else {\r\n            setShowHighlightColor(prevState => !prevState);\r\n        }\r\n    };\r\n\r\n    // Handles editor button commands for inline styles\r\n    const onInlineStyleClick = (command: string) => {\r\n        props.setEditorState(RichUtils.toggleInlineStyle(props.editorState, command));\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    // Removes chosen inline stylings based on current selection in editor\r\n    const removeInlineStyle = (styleArr: string[]) => {\r\n        const contentWithoutStyles = styleArr.reduce(\r\n            (newContentState, style) =>\r\n                Modifier.removeInlineStyle(\r\n                    newContentState,\r\n                    props.editorState.getSelection(),\r\n                    style\r\n                ),\r\n            props.contentState\r\n        );\r\n\r\n        return EditorState.push(\r\n            props.editorState,\r\n            contentWithoutStyles,\r\n            'change-inline-style'\r\n        );\r\n    };\r\n\r\n    // Overrides color or highlight styles, first removing appropriate style in range and inserting new\r\n    const colorChange = (type: string, color: string) => {\r\n        const colorArr = type === 'TEXTCOLOR' ? textColorArr : highlightColorArr;\r\n        if ((type === 'TEXTCOLOR' && color === 'black') || (type === 'HIGHLIGHT' && color === 'white')) {\r\n            props.setEditorState(removeInlineStyle(colorArr));\r\n        } else {\r\n            const newStyle = Modifier.applyInlineStyle(\r\n                removeInlineStyle(colorArr).getCurrentContent(),\r\n                props.editorState.getSelection(),\r\n                type === 'TEXTCOLOR' ? `${color}-TEXTCOLOR` : `${color}-HIGHLIGHT`\r\n            );\r\n            props.setEditorState(EditorState.push(\r\n                props.editorState,\r\n                newStyle,\r\n                'change-inline-style'\r\n            ));\r\n        }\r\n\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    const fontSizeChange = (size: number) => {\r\n        if (size === DEFAULT_TEXT_SIZE) {\r\n            props.setEditorState(removeInlineStyle(fontSizeArr));\r\n        } else {\r\n            const newStyle = Modifier.applyInlineStyle(\r\n                removeInlineStyle(fontSizeArr).getCurrentContent(),\r\n                props.editorState.getSelection(),\r\n                `${size}-FONTSIZE`\r\n            );\r\n            props.setEditorState(EditorState.push(\r\n                props.editorState,\r\n                newStyle,\r\n                'change-inline-style'\r\n            ));\r\n        }\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    // Overrides script inline styles if other is present, else it toggles whatever script is called\r\n    const changeScriptAlignment = (type: string) => {\r\n        const opposite = type === 'SUPERSCRIPT' ? 'SUBSCRIPT' : 'SUPERSCRIPT';\r\n        let newEditorState: EditorState = props.editorState;\r\n        // If the opposite script inline style is present, toggle that first before toggling the other\r\n        if (props.editorState.getCurrentInlineStyle().has(opposite)) {\r\n            newEditorState = RichUtils.toggleInlineStyle(props.editorState, opposite);\r\n        }\r\n        props.setEditorState(RichUtils.toggleInlineStyle(newEditorState, type));\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    const onBlockStyleClick = (command: string) => {\r\n        props.setEditorState(RichUtils.toggleBlockType(props.editorState, command));\r\n        props.removeComponentLoadedState();\r\n    };\r\n\r\n    const onUndo = () => {\r\n        props.setEditorState(EditorState.undo(props.editorState));\r\n    };\r\n\r\n    const onRedo = () => {\r\n        props.setEditorState(EditorState.redo(props.editorState));\r\n    };\r\n\r\n    const utilityButton = (btnStyle: ButtonStyle) => {\r\n        return (\r\n            <EditorButton\r\n                key={btnStyle.name}\r\n                type={btnStyle.name}\r\n                icon={btnStyle.icon}\r\n                fn={btnStyle.name === 'UNDO' ? onUndo : onRedo}\r\n                editorState={props.editorState}\r\n                styleType={btnStyle.type}\r\n            />\r\n        );\r\n    };\r\n\r\n    const inlineButton = (btnStyle: ButtonStyle) => {\r\n        const fn = 'color' in btnStyle ? colorChange :\r\n            btnStyle.name === 'SUPERSCRIPT' || btnStyle.name === 'SUBSCRIPT' ? changeScriptAlignment : onInlineStyleClick;\r\n        const showValue = btnStyle.name === 'TEXTCOLOR' ? showTextColor : showHighlightColor;\r\n\r\n        return (\r\n            <EditorButton\r\n                key={btnStyle.name}\r\n                type={btnStyle.name}\r\n                icon={btnStyle.icon}\r\n                hasMenu={btnStyle.hasMenu}\r\n                fn={fn}\r\n                showValue={showValue}\r\n                showButton={showButton}\r\n                editorState={props.editorState}\r\n                styleType='inline'\r\n            />\r\n        );\r\n    };\r\n\r\n    const selectStyle = (style: ButtonStyle) => {\r\n        let fn, options, defaultValue;\r\n        if (style.type === 'inline') {\r\n            fn = fontSizeChange;\r\n            options = fontSizes.sizes;\r\n            defaultValue = DEFAULT_TEXT_SIZE.toString();\r\n        } else {\r\n            fn = onBlockStyleClick;\r\n            options = headers;\r\n            defaultValue = 'headerone'\r\n        }\r\n\r\n        return (\r\n            <EditorDropdown\r\n                key={style.name}\r\n                options={options}\r\n                fn={fn}\r\n                type={style.name}\r\n                default={defaultValue}\r\n                editorState={props.editorState}\r\n                styleType={style.type}\r\n            />\r\n        );\r\n    };\r\n\r\n    const blockButton = (style: ButtonStyle) => {\r\n        return (\r\n            <EditorButton\r\n                key={style.name}\r\n                type={style.name}\r\n                icon={style.icon}\r\n                fn={onBlockStyleClick}\r\n                editorState={props.editorState}\r\n                styleType='block'\r\n            />\r\n        );\r\n    };\r\n\r\n    const buttonStyles = (style: ButtonStyle) => {\r\n        if (style.type === 'utility') return utilityButton(style);\r\n        if (style.btnType === 'select') return selectStyle(style);\r\n        if (style.type === 'inline') return inlineButton(style);\r\n        return blockButton(style);\r\n    }\r\n\r\n    return (\r\n        <div className={[classes.ButtonContainer, props.editorButtonClass].join(' ')}>\r\n            {props.editorButtonSelection.map(style => {\r\n                if ('categoryName' in style) {\r\n                    return (\r\n                        <EditorCategory key={style.categoryName} name={style.categoryName} icon={style.icon}>\r\n                            {style.contents.map(btnStyle => buttonStyles(btnStyle))}\r\n                        </EditorCategory>\r\n                    );\r\n                } else {\r\n                    return buttonStyles(style);\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditorButtonContainer;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { convertToRaw, convertFromRaw, Editor, EditorState, RichUtils, getDefaultKeyBinding, Modifier } from 'draft-js';\r\nimport colorData from '../../colors.json';\r\nimport fontSizes from '../../font-sizes.json';\r\nimport EditorButtonContainer from '../EditorButtonContainer/EditorButtonContainer';\r\nimport 'draft-js/dist/Draft.css';\r\nimport { Style } from '../EditorButtonContainer/EdtiorButtonInformation/EditorButtonInfo';\r\n\r\ninterface PropTypes {\r\n    id: string;\r\n    saveNote: (id: string, content: string) => void;\r\n    content: string;\r\n    editorButtonClass: string;\r\n    editorClass: string;\r\n    showButtons?: boolean;\r\n    editorButtonSelection: Style[];\r\n    lockEditor?: boolean;\r\n}\r\n\r\nconst textColorMap: { [key: string]: {} } = {};\r\nconst highlightColorMap: { [key: string]: {} } = {};\r\nconst fontSizeMap: { [key: string]: {} } = {};\r\n\r\nfor (let item of colorData.basic) {\r\n    textColorMap[`${item.name}-TEXTCOLOR`] = { color: item.color };\r\n    highlightColorMap[`${item.name}-HIGHLIGHT`] = { backgroundColor: item.color };\r\n}\r\n\r\nfor (let item of fontSizes.sizes) {\r\n    fontSizeMap[`${item}-FONTSIZE`] = { fontSize: item };\r\n}\r\n\r\nconst EditorContainer = ({ id, saveNote, content, editorButtonClass, editorClass, showButtons, editorButtonSelection, lockEditor }: PropTypes) => {\r\n    const [editorState, setEditorState] = useState(content ? () => EditorState.createWithContent(convertFromRaw(JSON.parse(content))) : () => EditorState.createEmpty());\r\n    const contentState = editorState.getCurrentContent();\r\n    const editorContainerRef = useRef<HTMLDivElement>(null);\r\n    // Flags if container component has just been loaded, only changes to false when editor gets used\r\n    const [appStart, setAppStart] = useState(true);\r\n    const [savingStr, setSavingStr] = useState(false);\r\n    const editorRef = useRef<Editor>(null);\r\n\r\n    const styleMap = {\r\n        'STRIKETHROUGH': {\r\n            textDecoration: 'line-through'\r\n        },\r\n        'SUPERSCRIPT': {\r\n            fontSize: '.83em',\r\n            verticalAlign: 'super'\r\n        },\r\n        'SUBSCRIPT': {\r\n            fontSize: '.83em',\r\n            verticalAlign: 'sub'\r\n        },\r\n        ...textColorMap,\r\n        ...highlightColorMap,\r\n        ...fontSizeMap\r\n    };\r\n\r\n    // Debounce save feature\r\n    useEffect(() => {\r\n        setSavingStr(false);\r\n        let timer = setTimeout(() => {\r\n            saveNote(id, JSON.stringify(convertToRaw(contentState)));\r\n            if (!appStart) {\r\n                setSavingStr(true);\r\n            }\r\n        }, 2000);\r\n        return () => {\r\n            clearTimeout(timer);\r\n        }\r\n    }, [contentState, appStart, saveNote, id]);\r\n\r\n    // Allows save message to appear after a key has been pressed in the editing container\r\n    useEffect(() => {\r\n        const setAppState = () => setAppStart(false);\r\n        const ref = editorContainerRef.current;\r\n\r\n        ref!.addEventListener('keydown', setAppState);\r\n\r\n        return () => {\r\n            ref!.removeEventListener('keydown', setAppState);\r\n        }\r\n    }, []);\r\n\r\n    // Removes save message a few seconds after saving\r\n    useEffect(() => {\r\n        let timer = setTimeout(() => {\r\n            if (savingStr === true) setSavingStr(false);\r\n        }, 2500);\r\n\r\n        return () => {\r\n            clearTimeout(timer);\r\n        }\r\n    }, [savingStr]);\r\n\r\n    const keyBindingFn = (e: any) => {\r\n        if (e.key === 'Tab') {\r\n            const selection = editorState.getSelection();\r\n            const blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\r\n\r\n            if (blockType === \"unordered-list-item\" || blockType === \"ordered-list-item\") {\r\n                const newState = RichUtils.onTab(e, editorState, 4);\r\n                setEditorState(newState);\r\n            } else {\r\n                const newState = Modifier.replaceText(editorState.getCurrentContent(), selection, '\\t');\r\n                setEditorState(EditorState.push(editorState, newState, 'insert-characters'));\r\n            }\r\n\r\n            return 'on-tab';\r\n        }\r\n\r\n        return getDefaultKeyBinding(e);\r\n    };\r\n\r\n    // Basic function to handle key commands\r\n    const handleKeyCommand = (command: string) => {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n        if (command === 'on-tab') {\r\n            return 'handled';\r\n        }\r\n\r\n        if (newState) {\r\n            setEditorState(newState);\r\n            return 'handled';\r\n        } else {\r\n            return 'not-handled';\r\n        }\r\n    };\r\n\r\n    const removeComponentLoadedState = () => {\r\n        if (appStart) setAppStart(false);\r\n    };\r\n\r\n    const focusEditor = () => {\r\n        if (editorRef.current) {\r\n            editorRef.current.focus();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showButtons === undefined || showButtons ? <EditorButtonContainer\r\n                editorState={editorState}\r\n                setEditorState={setEditorState}\r\n                contentState={contentState}\r\n                removeComponentLoadedState={removeComponentLoadedState}\r\n                editorButtonClass={editorButtonClass}\r\n                editorButtonSelection={editorButtonSelection}\r\n            /> : null}\r\n            <div ref={editorContainerRef} className={editorClass} onClick={focusEditor}>\r\n                <Editor\r\n                    ref={editorRef}\r\n                    handleKeyCommand={handleKeyCommand}\r\n                    customStyleMap={styleMap}\r\n                    editorState={editorState}\r\n                    onChange={setEditorState}\r\n                    keyBindingFn={keyBindingFn}\r\n                    readOnly={lockEditor !== undefined && lockEditor}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditorContainer;\r\n","import * as btnInfo from './EditorButtonInfo';\r\n\r\nexport interface CategoryLayout {\r\n    categoryName: string;\r\n    icon: string;\r\n    contents: btnInfo.Style[];\r\n}\r\n\r\n// Basic Button Layouts\r\nexport const utility = [\r\n    btnInfo.undo, btnInfo.redo\r\n];\r\n\r\nexport const basicInlineLayout = [\r\n    btnInfo.bold, btnInfo.italic, btnInfo.underline, btnInfo.strikethrough, btnInfo.superscript, btnInfo.subscript\r\n];\r\n\r\nexport const colorInlineLayout = [\r\n    btnInfo.textColor, btnInfo.highlight\r\n];\r\n\r\nexport const fullInlineLayout = [\r\n    ...basicInlineLayout, ...colorInlineLayout\r\n];\r\n\r\nexport const selectLayout = [\r\n    btnInfo.fontSize, btnInfo.headers\r\n];\r\n\r\nexport const basicBlockLayout = [\r\n    btnInfo.unorderedListItem, btnInfo.orderedListItem\r\n];\r\n\r\nexport const fullBlockLayout = [\r\n    ...basicBlockLayout, btnInfo.blockQuote, btnInfo.code, btnInfo.unstyled\r\n];\r\n\r\nexport const basicOverallLayout = [\r\n    ...utility, ...basicInlineLayout, ...basicBlockLayout\r\n];\r\n\r\nexport const fullOverallLayout = [\r\n    ...utility, ...fullInlineLayout, ...selectLayout, ...fullBlockLayout\r\n];\r\n\r\n\r\n// Compact Category Layouts\r\n\r\nconst baseCategory: CategoryLayout = {\r\n    categoryName: 'base',\r\n    icon: 'bold',\r\n    contents: basicInlineLayout\r\n};\r\n\r\nconst colorsCategory: CategoryLayout = {\r\n    categoryName: 'colors',\r\n    icon: 'paint-brush',\r\n    contents: colorInlineLayout\r\n};\r\n\r\nconst sizeCategory: CategoryLayout = {\r\n    categoryName: 'size',\r\n    icon: 'font',\r\n    contents: selectLayout\r\n};\r\n\r\nconst blockCategory: CategoryLayout = {\r\n    categoryName: 'block',\r\n    icon: 'list-ul',\r\n    contents: fullBlockLayout\r\n};\r\n\r\n// Compact Layouts\r\n\r\nexport const smallCompactLayout = [\r\n    ...utility, baseCategory, colorsCategory, sizeCategory, blockCategory\r\n];\r\n\r\nexport const mediumCompactLayout = [\r\n    ...utility, ...basicInlineLayout, colorsCategory, sizeCategory, blockCategory\r\n];\r\n","export interface Style {\r\n    icon?: string;\r\n    name: string;\r\n    btnType?: string | 'button';\r\n    color?: boolean;\r\n    hasMenu?: boolean;\r\n    type: 'inline' | 'block' | 'utility';\r\n};\r\n\r\nexport const undo: Style = { icon: 'undo-alt', name: 'UNDO', type: 'utility' };\r\nexport const redo: Style = { icon: 'redo-alt', name: 'REDO', type: 'utility' };\r\n\r\nexport const bold: Style = { icon: 'bold', name: 'BOLD', type: 'inline' };\r\nexport const italic: Style = { icon: 'italic', name: 'ITALIC', type: 'inline' };\r\nexport const underline: Style = { icon: 'underline', name: 'UNDERLINE', type: 'inline' };\r\nexport const strikethrough: Style = { icon: 'strikethrough', name: 'STRIKETHROUGH', type: 'inline' };\r\nexport const superscript: Style = { icon: 'superscript', name: 'SUPERSCRIPT', type: 'inline' };\r\nexport const subscript: Style = { icon: 'subscript', name: 'SUBSCRIPT', type: 'inline' };\r\nexport const textColor: Style = { icon: 'font', name: 'TEXTCOLOR', type: 'inline', color: true, hasMenu: true };\r\nexport const highlight: Style = { icon: 'highlighter', name: 'HIGHLIGHT', type: 'inline', color: true, hasMenu: true };\r\n\r\nexport const fontSize: Style = { btnType: 'select', name: 'FONTSIZE', type: 'inline' };\r\nexport const headers: Style = { btnType: 'select', name: 'headers', type: 'block' };\r\n\r\nexport const unorderedListItem: Style = { icon: 'list-ul', name: 'unordered-list-item', type: 'block' };\r\nexport const orderedListItem: Style = { icon: 'list-ol', name: 'ordered-list-item', type: 'block' };\r\nexport const blockQuote: Style = { icon: 'quote-right', name: 'blockquote', type: 'block' };\r\nexport const code: Style = { icon: 'code', name: 'code-block', type: 'block' };\r\nexport const unstyled: Style = { icon: 'remove-format', name: 'unstyled', type: 'block' };\r\n","import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport EditorContainer from '../EditorContainer/EditorContainer';\r\nimport State from '../../store/combinedState';\r\nimport classes from './PageContainer.module.css';\r\nimport { useCallback } from 'react';\r\nimport { fullOverallLayout, mediumCompactLayout, smallCompactLayout } from '../EditorButtonContainer/EdtiorButtonInformation/EditorButtonLayouts';\r\n\r\nconst PageContainer = () => {\r\n    const [layout, setLayout] = useState<any[]>([]);\r\n    const id = useSelector((state: State) => state.page.currentPageId);\r\n    const content = useSelector((state: State) => state.page.pages.filter((item: any) => item.id === id)[0].content);\r\n    const dispatch = useDispatch();\r\n\r\n    const checkWindowWidth = (width: number) => {\r\n        const medium = 900;\r\n        const small = 500;\r\n\r\n        if (width >= medium) {\r\n            return fullOverallLayout;\r\n        } else if (width < medium && width >= small) {\r\n            return mediumCompactLayout;\r\n        } else {\r\n            return smallCompactLayout;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const setLayoutWidth = () => setLayout(checkWindowWidth(window.innerWidth));\r\n\r\n        setLayoutWidth();\r\n        window.addEventListener('resize', setLayoutWidth);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', setLayoutWidth);\r\n        }\r\n    }, []);\r\n\r\n    const saveNote = useCallback((id: string, content: string) => {\r\n        dispatch({ type: 'SAVE_PAGE', id, content });\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div id={classes.PageContainer}>\r\n            <EditorContainer\r\n                id={id}\r\n                editorClass={classes.PageEditorContainer}\r\n                editorButtonClass={classes.PageEditorButtonContainer}\r\n                saveNote={saveNote}\r\n                content={content}\r\n                editorButtonSelection={layout}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageContainer;\r\n","import { useDispatch } from \"react-redux\";\r\nimport classes from './AddButton.module.css';\r\n\r\ninterface PropTypes {\r\n    type: 'Page' | 'Board';\r\n}\r\n\r\nconst AddButton = (props: PropTypes) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = () => {\r\n        dispatch({ type: `CREATE_${props.type.toUpperCase()}` });\r\n    }\r\n\r\n    return <button className={classes.AddButton} onClick={clickHandler}>Create {props.type}</button>\r\n}\r\n\r\nexport default AddButton;\r\n","import classes from './OpenMenuButton.module.css';\r\n\r\ninterface PropTypes {\r\n    menuClass: string;\r\n    click: (e: any) => void;\r\n}\r\n\r\nconst OpenMenuButton = (props: PropTypes) => {\r\n    return (\r\n        <button onClick={props.click} className={[classes.OpenMenuButton, props.menuClass].join(' ')}>\r\n            <svg viewBox=\"0 0 515.555 515.555\" aria-labelledby=\"menuTitle menuDesc\" role=\"menu\">\r\n                <title id=\"menuTitle\">Menu Button</title>\r\n                <desc id=\"menuDesc\">Opens menu for the corresponding item</desc>\r\n                <path d=\"M303.347 18.875c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0M303.347 212.209c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0M303.347 405.541c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0\" />\r\n            </svg>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default OpenMenuButton;\r\n","import { useState, SyntheticEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport OpenMenuButton from '../../OpenMenuButton/OpenMenuButton';\r\nimport classes from './MenuItem.module.css';\r\n\r\ninterface PropTypes {\r\n    title: string;\r\n    click: () => void;\r\n    delete: { type: string, id: string };\r\n    type: 'page' | 'board';\r\n}\r\n\r\nconst MenuItem = (props: PropTypes) => {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const toggleMenu = (e: SyntheticEvent) => {\r\n        e.stopPropagation();\r\n        setShowMenu(prevState => !prevState);\r\n    };\r\n\r\n    const closeMenu = () => {\r\n        setShowMenu(false);\r\n    };\r\n\r\n    const deleteItem = (e: SyntheticEvent) => {\r\n        e.stopPropagation();\r\n        dispatch(props.delete)\r\n    }\r\n\r\n    return (\r\n        <div onMouseLeave={closeMenu} className={classes.MenuItem} onClick={props.click}>\r\n            <div className={props.type === 'page' ? classes.MenuPageImage : classes.MenuBoardImage}></div>\r\n            <p>{props.title}</p>\r\n            <OpenMenuButton menuClass={classes.MenuItemButton} click={toggleMenu} />\r\n            {showMenu ? <div onClick={deleteItem} className={classes.SubMenu}>Delete</div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuItem;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport State from '../../../store/combinedState';\r\nimport AddButton from '../AddButton/AddButton';\r\nimport MenuItem from '../MenuItem/MenuItem';\r\nimport classes from '../Menu.module.css';\r\n\r\ninterface PropTypes {\r\n    toggle: () => void;\r\n}\r\n\r\nconst PageMenu = (props: PropTypes) => {\r\n    const pages = useSelector((state: State) => state.page.pages);\r\n    const currentPageId = useSelector((state: State) => state.page.currentPageId);\r\n    const dispatch = useDispatch();\r\n\r\n    const itemClickHandler = (id: string) => {\r\n        props.toggle();\r\n        dispatch({ type: 'SHOW_PAGE', id });\r\n        dispatch({ type: 'HIDE_BOARD', id });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.Menu}>\r\n            <ul>\r\n                <AddButton type='Page' />\r\n                {pages.filter(item => item.id !== currentPageId).map(item => {\r\n                    return (\r\n                        <li key={item.id}>\r\n                            <MenuItem\r\n                                title={item.title || 'Untitled'}\r\n                                click={() => itemClickHandler(item.id)}\r\n                                delete={{ type: 'DELETE_PAGE', id: item.id }}\r\n                                type='page'\r\n                            />\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageMenu;\r\n","import { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport State from '../../../store/combinedState';\r\nimport AddButton from '../AddButton/AddButton';\r\nimport MenuItem from '../MenuItem/MenuItem';\r\nimport classes from '../Menu.module.css';\r\n\r\ninterface PropTypes {\r\n    toggle: () => void;\r\n}\r\n\r\nconst BoardMenu = (props: PropTypes) => {\r\n    const boards = useSelector((state: State) => state.board.boards);\r\n    const boardState = useSelector((state: State) => state.board);\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = (id: string) => {\r\n        props.toggle();\r\n        dispatch({ type: 'SHOW_BOARD', id });\r\n        dispatch({ type: 'HIDE_PAGE' });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.Menu}>\r\n            <ul>\r\n                <AddButton type='Board' />\r\n                {Object.keys(boards).filter(item => boards[item].id !== boardState.currentBoardId).map(item => {\r\n                    return (\r\n                        <li key={boards[item].id}>\r\n                            <MenuItem\r\n                                title={boards[item].title || 'Untitled'}\r\n                                click={() => clickHandler(boards[item].id)}\r\n                                delete={{ type: 'DELETE_BOARD', id: boards[item].id }}\r\n                                type='board'\r\n                            />\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardMenu;\r\n","import { useState, useRef } from 'react';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nimport PageMenu from './PageMenu/PageMenu';\r\nimport BoardMenu from './BoardMenu/BoardMenu';\r\nimport classes from './MenuContainer.module.css';\r\n\r\nconst MenuContainer = () => {\r\n    const [showPagesMenu, setShowPagesMenu] = useState(true);\r\n    const [showFull, setShowFull] = useState(false);\r\n\r\n    const showPages = () => {\r\n        setShowPagesMenu(true);\r\n    };\r\n\r\n    const showBoard = () => {\r\n        setShowPagesMenu(false);\r\n    };\r\n\r\n    const containerRef = useRef(null);\r\n\r\n    const duration = 500;\r\n\r\n    const transitionStyles: { [id: string]: React.CSSProperties } = {\r\n        entering: { transform: 'translateY(300px)' },\r\n        entered: { transform: 'translateY(300px)' },\r\n        exited: { visibility: 'hidden' }\r\n    };\r\n\r\n    const defaultStyle = {\r\n        transition: `transform ${duration} ease-in`,\r\n        transform: 'translateY(0)'\r\n    };\r\n\r\n    const containerToggle = () => {\r\n        setShowFull(prevState => !prevState);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Transition in={showFull} timeout={duration} nodeRef={containerRef}>\r\n                {(state) => (\r\n                    <div style={{ ...defaultStyle, ...transitionStyles[state] }} id={classes.MenuContainer} ref={containerRef}>\r\n                        <div id={classes.MenuButtonContainer}>\r\n                            <button className={showPagesMenu ? classes.active : undefined} onClick={showPages}>Pages</button>\r\n                            <button className={!showPagesMenu ? classes.active : undefined} onClick={showBoard}>Board</button>\r\n                        </div>\r\n                        {showPagesMenu ? <PageMenu toggle={containerToggle} /> : <BoardMenu toggle={containerToggle} />}\r\n                    </div>\r\n                )}\r\n            </Transition>\r\n            <div id={classes.MenuToggle} className={showFull ? classes.expanded : classes.collapsed} onClick={containerToggle} aria-label={!showFull ? 'Expand Menu' : 'Collapse Menu'}></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MenuContainer;\r\n","import { SyntheticEvent } from 'react';\r\nimport classes from \"./NoteMenuItem.module.css\";\r\n\r\ninterface PropTypes {\r\n    children: any;\r\n    clickFunction: (e: SyntheticEvent) => void;\r\n    subMenuItem?: boolean;\r\n    addedClasses?: string[];\r\n}\r\n\r\nconst NoteMenuItem = (props: PropTypes) => {\r\n    return (\r\n        <button\r\n            onClick={props.clickFunction}\r\n            className={\r\n                [\r\n                    classes.NoteMenuItem,\r\n                    props.subMenuItem && classes.NoteSubMenuItem,\r\n                    props.addedClasses ? props.addedClasses!.map(item => classes[item]).join(' ') : null\r\n                ].join(' ')\r\n            }\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default NoteMenuItem;\r\n","import { SyntheticEvent } from \"react\";\r\n\r\nimport classes from './ConfirmationModal.module.css';\r\n\r\ninterface PropTypes {\r\n    children: string;\r\n    modalClass: string;\r\n    bodyFunction?: (e: SyntheticEvent) => void;\r\n    confirmFunction: (e: SyntheticEvent) => void;\r\n    cancelFunction: (e: SyntheticEvent) => void;\r\n}\r\n\r\nconst ConfirmationModal = (props: PropTypes) => {\r\n    return (\r\n        <div onClick={props.bodyFunction} className={[classes.ConfirmationModal, props.modalClass].join(' ')}>\r\n            <p>{props.children}</p>\r\n            <button onClick={props.confirmFunction}>Yes</button>\r\n            <button onClick={props.cancelFunction}>No</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { SyntheticEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport classes from './NoteMenu.module.css';\r\nimport NoteMenuItem from './NoteMenuItem/NoteMenuItem';\r\nimport State from '../../../../store/combinedState';\r\nimport ConfirmationModal from '../../../../components/ConfirmationModal/ConfirmationModal';\r\n\r\nconst noteColors = [\r\n    { name: 'Original', color: '' },\r\n    { name: 'Blue', color: 'blue' },\r\n    { name: 'Green', color: 'green' },\r\n    { name: 'Pink', color: 'pink' }\r\n];\r\n\r\ntype LockTypes = 'editor' | 'position' | 'delete';\r\n\r\nconst lockTypes: LockTypes[] = ['editor', 'position', 'delete'];\r\n\r\ninterface PropTypes {\r\n    id: string;\r\n    hideMenu: () => void;\r\n}\r\n\r\nconst NoteMenu = (props: PropTypes) => {\r\n    const dispatch = useDispatch();\r\n    const locks = useSelector((state: State) => state.board.boards[state.board.currentBoardId].notes[props.id].locks);\r\n    const [showColorMenu, setShowColorMenu] = useState(false);\r\n    const [showLockMenu, setShowLockMenu] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n    const handleClickEffects = (e: SyntheticEvent) => {\r\n        e.stopPropagation();\r\n        setShowDeleteModal(false);\r\n    }\r\n\r\n    // Change Note color function\r\n    const changeNoteColor = (color: string, e: SyntheticEvent) => {\r\n        handleClickEffects(e);\r\n        dispatch({ type: 'CHANGE_NOTE_COLOR', noteId: props.id, color });\r\n    };\r\n\r\n    const toggleColorMenu = (e: SyntheticEvent) => {\r\n        handleClickEffects(e);\r\n        setShowColorMenu(prevState => !prevState);\r\n    };\r\n\r\n    // Lock function, prevent note from moving and/or being deleted\r\n    const lockToggle = (lockType: string, e: SyntheticEvent) => {\r\n        handleClickEffects(e);\r\n        dispatch({ type: 'TOGGLE_NOTE_LOCK', noteId: props.id, lockType });\r\n    };\r\n\r\n    const toggleLockMenu = (e: SyntheticEvent) => {\r\n        handleClickEffects(e);\r\n        setShowLockMenu(prevState => !prevState);\r\n    };\r\n\r\n    const deleteNoteCheck = (e: SyntheticEvent) => {\r\n        e.stopPropagation();\r\n        if (locks.delete) return;\r\n        setShowDeleteModal(prevState => !prevState);\r\n    };\r\n\r\n    const cancelDeletion = (e: SyntheticEvent) => {\r\n        e.stopPropagation();\r\n        setShowDeleteModal(false);\r\n    };\r\n\r\n    const confirmDeletion = () => {\r\n        dispatch({ type: 'DELETE_NOTE', id: props.id });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.NoteMenu}>\r\n            <NoteMenuItem clickFunction={toggleColorMenu}>Change Note Color</NoteMenuItem>\r\n            {showColorMenu ? <div className={classes.NoteSubMenu}>\r\n                {noteColors.map(item => (\r\n                    <NoteMenuItem key={item.name} clickFunction={(e) => changeNoteColor(item.color, e)} subMenuItem>\r\n                        {item.name}\r\n                    </NoteMenuItem>\r\n                ))}\r\n            </div> : null}\r\n            <NoteMenuItem clickFunction={toggleLockMenu}>Lock</NoteMenuItem>\r\n            {showLockMenu ? <div className={classes.NoteSubMenu}>\r\n                {lockTypes.map(item => (\r\n                    <NoteMenuItem key={item} clickFunction={(e) => lockToggle(item, e)} subMenuItem>\r\n                        {locks[item] ? <div className={classes.LockMenuItem}><div className=\"fas fa-lock\"></div><p>{item}</p></div> : item}\r\n                    </NoteMenuItem>\r\n                ))}\r\n            </div> : null}\r\n            <NoteMenuItem clickFunction={deleteNoteCheck} addedClasses={['delete', locks.delete ? 'disabled' : '']}>Delete</NoteMenuItem>\r\n            {showDeleteModal ? (\r\n                <ConfirmationModal\r\n                    modalClass={classes.DeleteModal}\r\n                    bodyFunction={(e) => e.stopPropagation()}\r\n                    confirmFunction={confirmDeletion}\r\n                    cancelFunction={cancelDeletion}\r\n                >\r\n                    Confirm Note Deletion?\r\n                </ConfirmationModal>\r\n            ) : null}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default NoteMenu;\r\n","import { SyntheticEvent, useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport EditorContainer from '../../EditorContainer/EditorContainer';\r\n\r\nimport classes from \"./Note.module.css\";\r\nimport State from '../../../store/combinedState';\r\nimport NoteMenu from './NoteMenu/NoteMenu';\r\nimport { basicOverallLayout } from '../../EditorButtonContainer/EdtiorButtonInformation/EditorButtonLayouts';\r\nimport OpenMenuButton from '../../../components/OpenMenuButton/OpenMenuButton';\r\n\r\ninterface PropTypes {\r\n    setDraggingState: (state: boolean) => void;\r\n    zIndex: number;\r\n    containerWidth: number;\r\n    containerHeight: number;\r\n    dragging: boolean;\r\n    id: string;\r\n    top: number;\r\n    left: number;\r\n    noteFocus: { id: string, inFocus: boolean };\r\n    setNoteFocus: any;\r\n}\r\n\r\ninterface NoteStyle {\r\n    zIndex: number,\r\n    top: number,\r\n    left: number,\r\n    width?: number\r\n}\r\n\r\nconst Note = (props: PropTypes) => {\r\n    const boardId = useSelector((state: State) => state.board.currentBoardId);\r\n    const note = useSelector((state: State) => state.board.boards[boardId].notes[props.id]);\r\n    const [diffX, setDiffX] = useState(0);\r\n    const [diffY, setDiffY] = useState(0);\r\n    const [focus, setFocus] = useState(false);\r\n    const zIndex = useSelector(() => note.zIndex);\r\n    const color = useSelector(() => note.color);\r\n    const [style, setStyle] = useState<NoteStyle>({ zIndex, top: props.top || 20, left: props.left || 20 });\r\n    const locks = useSelector(() => note.locks);\r\n    const [grabDivStyle, setGrabDivStyle] = useState(locks.position ? { cursor: 'default' } : { cursor: 'grab' });\r\n    const dispatch = useDispatch();\r\n    const [showEditorButtons, setShowEditorButtons] = useState(false);\r\n    const [showNoteMenuToggle, setShowNoteMenuToggle] = useState(false);\r\n    const [showNoteMenu, setShowNoteMenu] = useState(false);\r\n    const [editorButtonContainerClass, setEditorButtonContainerClass] = useState(classes.NoteButtonContainer);\r\n\r\n    const setEditorButtonState = useCallback(() => {\r\n        if (!locks.editor) {\r\n            setShowEditorButtons(true);\r\n        } else {\r\n            setShowEditorButtons(false);\r\n        };\r\n    }, [locks.editor]);\r\n\r\n    useEffect(() => {\r\n        if (props.noteFocus.inFocus && props.noteFocus.id === note.id) {\r\n            setEditorButtonState();\r\n            setShowNoteMenuToggle(true);\r\n        } else {\r\n            setShowEditorButtons(false);\r\n            setShowNoteMenuToggle(false);\r\n            setShowNoteMenu(false);\r\n        }\r\n    }, [props.noteFocus, note.id, locks.editor, setEditorButtonState]);\r\n\r\n    useEffect(() => {\r\n        if (locks.position) {\r\n            setGrabDivStyle({ cursor: 'default' })\r\n        } else {\r\n            setGrabDivStyle({ cursor: 'grab' });\r\n        }\r\n    }, [locks.position]);\r\n\r\n    const dragStart = (e: any) => {\r\n        if (locks.position) return;\r\n\r\n        e.stopPropagation();\r\n        setDiffX(e.screenX - e.target.getBoundingClientRect().left);\r\n        setDiffY(e.screenY - e.target.getBoundingClientRect().top);\r\n\r\n        props.setDraggingState(true);\r\n        setFocus(true);\r\n        setGrabDivStyle({ cursor: 'grabbing' });\r\n        zIndexHandler();\r\n        setStyle({ ...style, width: e.target.getBoundingClientRect().width });\r\n    };\r\n\r\n    const zIndexHandler = () => {\r\n        if (zIndex === props.zIndex) return;\r\n        dispatch({ type: 'UPDATE_NOTE_ZINDEX', noteId: props.id, zIndex: props.zIndex + 1 });\r\n        dispatch({ type: 'UPDATE_BOARD_ZINDEX', zIndex: props.zIndex + 1 });\r\n        setStyle({ ...style, zIndex: props.zIndex + 1 });\r\n    };\r\n\r\n    const onDrag = (e: any) => {\r\n        if (locks.position) return;\r\n\r\n        const APP_MENU_HEIGHT_MINUS_PADDING = 85;\r\n        let top = e.screenY - diffY - APP_MENU_HEIGHT_MINUS_PADDING + window.scrollY;\r\n        let left = e.screenX - diffX + window.scrollX;\r\n\r\n        if (top < 40) top = 40;\r\n        if (left < 20) left = 20;\r\n\r\n        setShowEditorButtons(false);\r\n        setShowNoteMenuToggle(false);\r\n        setShowNoteMenu(false);\r\n        setStyle({ ...style, left, top });\r\n    };\r\n\r\n    const setEditorButtonClass = (right: number, top: number) => {\r\n        const classList: string[] = [classes.NoteButtonContainer];\r\n\r\n        if (right > ((window.innerWidth * 0.75) + window.scrollX)) {\r\n            classList.push(classes.right);\r\n        }\r\n\r\n        if (top < ((window.innerHeight - 105) * 0.1) + window.scrollY) {\r\n            classList.push(classes.bottom);\r\n        }\r\n\r\n        setEditorButtonContainerClass(classList.join(' '));\r\n    };\r\n\r\n    const removeNoteWidth = () => {\r\n        let tempStyle = { ...style }\r\n        delete tempStyle.width;\r\n        setStyle(tempStyle);\r\n    };\r\n\r\n    const setNoteStates = () => {\r\n        setFocus(false);\r\n        props.setDraggingState(false);\r\n        setGrabDivStyle({ cursor: 'grab' });\r\n    };\r\n\r\n    const checkAndUpdateBoardSize = (right: number, bottom: number) => {\r\n        if (bottom >= props.containerHeight + 80) {\r\n            dispatch({ type: 'UPDATE_BOARD_SIZE', direction: 'height', size: bottom - 80 });\r\n        }\r\n\r\n        if (right >= props.containerWidth - 20) {\r\n            dispatch({ type: 'UPDATE_BOARD_SIZE', direction: 'width', size: right + 20 });\r\n        }\r\n    };\r\n\r\n    const checkAndUpdateNotePosition = (right: number, bottom: number) => {\r\n        const noteMoved = style.left !== note.left || style.top !== note.top || right !== note.right || bottom !== note.bottom;\r\n\r\n        if (noteMoved) {\r\n            const position = { left: style.left, top: style.top, right, bottom };\r\n            dispatch({ type: 'UPDATE_NOTE_POSITION', noteId: props.id, position });\r\n        }\r\n    };\r\n\r\n    const dragEnd = (e: any) => {\r\n        if (locks.position) return;\r\n\r\n        let right = e.currentTarget.getBoundingClientRect().right + window.scrollX;\r\n        let bottom = e.currentTarget.getBoundingClientRect().bottom + window.scrollY;\r\n\r\n        removeNoteWidth();\r\n        setEditorButtonClass(right - window.scrollX, style.top);\r\n\r\n        setNoteStates();\r\n\r\n        checkAndUpdateBoardSize(right, bottom);\r\n        checkAndUpdateNotePosition(right, bottom);\r\n    };\r\n\r\n    const saveNote = useCallback((id: string, content: string) => {\r\n        dispatch({ type: 'SAVE_NOTE_CONTENT', noteId: id, content });\r\n    }, [dispatch]);\r\n\r\n    const clickHandler = (e: SyntheticEvent) => {\r\n        e.stopPropagation();\r\n        props.setNoteFocus({ id: note.id, inFocus: true });\r\n        if (showNoteMenu) setShowNoteMenu(false);\r\n        zIndexHandler();\r\n    };\r\n\r\n    const toggleNoteMenu = () => {\r\n        setShowNoteMenu((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={[classes.Note, classes[color]].join(' ')}\r\n            style={style}\r\n            {...(props.dragging && focus && { onMouseMove: onDrag })}\r\n            onMouseUp={dragEnd}\r\n            onClick={clickHandler}\r\n        >\r\n            <div\r\n                className={classes.NoteGrabContainer}\r\n                onMouseDown={dragStart}\r\n                style={grabDivStyle}\r\n            ><div /></div>\r\n            <EditorContainer\r\n                id={props.id}\r\n                content={note.content}\r\n                editorButtonClass={editorButtonContainerClass}\r\n                editorClass={classes.NoteEditorContainer}\r\n                saveNote={saveNote}\r\n                showButtons={showEditorButtons}\r\n                editorButtonSelection={basicOverallLayout}\r\n                lockEditor={locks.editor}\r\n            />\r\n            {showNoteMenuToggle ? <OpenMenuButton click={toggleNoteMenu} menuClass={classes.NoteMenuButton} /> : null}\r\n            {showNoteMenu ? <NoteMenu id={props.id} hideMenu={() => setShowNoteMenu(false)} /> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport classes from './NoteBoard.module.css';\r\nimport Note from './Note/Note';\r\n\r\nimport State from '../../store/combinedState';\r\n\r\ninterface PropTypes {\r\n    id: string;\r\n}\r\n\r\ntype boardDimensions = {\r\n    height: number | string;\r\n    width: number | string;\r\n}\r\n\r\nconst NoteBoard = (props: PropTypes) => {\r\n    const [dragging, setDragging] = useState(false);\r\n    const zIndex = useSelector((state: State) => state.board.boards[props.id].maxZIndex);\r\n    const width = useSelector((state: State) => state.board.boards[props.id].width);\r\n    const height = useSelector((state: State) => state.board.boards[props.id].height);\r\n    const [style, setStyle] = useState<boardDimensions>({ width: width, height: height });\r\n    const dispatch = useDispatch();\r\n    const notes = useSelector((state: State) => state.board.boards[props.id].notes);\r\n    const keys = useSelector(() => Object.keys(notes));\r\n    const [noteFocus, setNoteFocus] = useState({ id: '', inFocus: false });\r\n\r\n    const setDraggingState = (value: boolean) => {\r\n        setDragging(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const HEADER_HEIGHT = 105;\r\n        let heightValue: string | number = height;\r\n        let widthValue: string | number = width;\r\n\r\n        if (heightValue < window.innerHeight - HEADER_HEIGHT) {\r\n            heightValue = 'calc(100% - ' + HEADER_HEIGHT + 'px)';\r\n        }\r\n\r\n        if (widthValue < window.innerWidth) {\r\n            widthValue = '100%';\r\n        }\r\n\r\n        setStyle({ height: heightValue, width: widthValue });\r\n    }, [height, width]);\r\n\r\n    const addNote = () => {\r\n        dispatch({ type: 'CREATE_NOTE' });\r\n        dispatch({ type: 'UPDATE_BOARD_ZINDEX', zIndex: zIndex + 1 });\r\n    };\r\n\r\n    return (\r\n        <div id={classes.NoteBoard} style={style} onClick={() => setNoteFocus({ id: '', inFocus: false })}>\r\n            {keys.map(item => {\r\n                return (\r\n                    <Note\r\n                        key={notes[item].id}\r\n                        id={notes[item].id}\r\n                        left={notes[item].left}\r\n                        top={notes[item].top}\r\n                        dragging={dragging}\r\n                        setDraggingState={setDraggingState}\r\n                        zIndex={zIndex}\r\n                        containerWidth={width}\r\n                        containerHeight={height}\r\n                        noteFocus={noteFocus}\r\n                        setNoteFocus={setNoteFocus}\r\n                    />\r\n                );\r\n            })}\r\n            {Object.keys(notes).length === 0 ? (\r\n                <div id={classes.AddButtonArrowContainer}>\r\n                    <div id={classes.AddButtonArrowBody}>Add Note</div>\r\n                    <div id={classes.AddButtonArrow}></div>\r\n                </div>\r\n            ) : null}\r\n            <button id={classes.AddButton} onClick={addNote} aria-label='Add Note'>+</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteBoard;\r\n","import { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport PageContainer from './containers/PageContainer/PageContainer';\r\nimport MenuContainer from './components/MenuContainer/MenuContainer';\r\nimport NoteBoard from './containers/NoteBoard/NoteBoard';\r\n\r\n\r\ninterface PropTypes {\r\n\tcurrentPageId: string;\r\n\tshowEditor: boolean;\r\n\tcurrentBoardId: string;\r\n\tshowBoard: boolean;\r\n};\r\n\r\nconst App = (props: PropTypes) => {\r\n\tconst [appClasses, setAppClasses] = useState(['App'])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst baseClass = ['App'];\r\n\r\n\t\tif (props.showBoard) {\r\n\t\t\tsetAppClasses(baseClass.concat('Board'));\r\n\t\t} else if (props.showEditor) {\r\n\t\t\tsetAppClasses(baseClass.concat('Page'));\r\n\t\t} else {\r\n\t\t\tsetAppClasses(baseClass);\r\n\t\t}\r\n\t}, [props.showBoard, props.showEditor]);\r\n\r\n\treturn (\r\n\t\t<div className={appClasses.join(' ')}>\r\n\t\t\t<Header />\r\n\t\t\t<MenuContainer />\r\n\t\t\t{(props.showEditor && props.currentPageId !== '') && <PageContainer key={props.currentPageId} />}\r\n\t\t\t{(props.showBoard && props.currentBoardId !== '') && <NoteBoard key={props.currentBoardId} id={props.currentBoardId} />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\tcurrentPageId: state.page.currentPageId,\r\n\t\tshowEditor: state.page.showEditor,\r\n\t\tshowBoard: state.board.showBoard,\r\n\t\tcurrentBoardId: state.board.currentBoardId\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateLocalStorage = (key: string, value: any) => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n","import { AnyAction } from 'redux';\r\nimport { v4 } from 'uuid';\r\n\r\nimport { updateLocalStorage } from './utility';\r\n\r\nexport interface Page {\r\n    id: string;\r\n    title: string;\r\n    content: string;\r\n};\r\n\r\nexport interface State {\r\n    pages: Page[];\r\n    currentPageId: string;\r\n    showEditor: boolean;\r\n};\r\n\r\nconst initialState: State = {\r\n    pages: JSON.parse(localStorage.getItem('pages') || '[]'),\r\n    currentPageId: '',\r\n    showEditor: false\r\n};\r\n\r\nconst findPageIndex = (state: State, id: string): number => {\r\n    for (let i = 0; i < state.pages.length; i++) {\r\n        if (state.pages[i].id === id) {\r\n            return i;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nconst savePage = (state: State, [id, title = '', content = '']: string[]) => {\r\n    const newPageState = state.pages.map(item => {\r\n        if (item.id === id) {\r\n            if (content) item.content = content;\r\n            if (title) item.title = title;\r\n        }\r\n        return item;\r\n    });\r\n\r\n    return newPageState;\r\n};\r\n\r\nconst deletePage = (state: State, id: string) => {\r\n    const newPagesState = [...state.pages];\r\n    newPagesState.splice(findPageIndex(state, id), 1);\r\n    return newPagesState;\r\n};\r\n\r\nconst updatePages = (state: State, fn: (state: State, action: any) => {}, updateAction: any) => {\r\n    const newPage = fn(state, updateAction);\r\n    updateLocalStorage('pages', newPage);\r\n    return { ...state, pages: newPage };\r\n};\r\n\r\nconst pageReducer = (state = initialState, action: AnyAction) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PAGE':\r\n            const newPages = state.pages.concat({ id: v4(), title: '', content: '' });\r\n            updateLocalStorage('pages', newPages);\r\n            return {\r\n                ...state,\r\n                pages: newPages\r\n            };\r\n        case 'SAVE_PAGE':\r\n            return updatePages(state, savePage, [action.id, null, action.content]);\r\n        case 'SAVE_PAGE_TITLE':\r\n            return updatePages(state, savePage, [action.id, action.title, null]);\r\n        case 'DELETE_PAGE':\r\n            return updatePages(state, deletePage, action.id);\r\n        case 'SHOW_PAGE':\r\n            return { ...state, currentPageId: action.id, showEditor: true };\r\n        case 'HIDE_PAGE':\r\n            return { ...state, currentPageId: '', showEditor: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default pageReducer;\r\n","import { v4 } from 'uuid';\r\n\r\nimport { updateLocalStorage } from './utility';\r\n\r\nexport interface Note {\r\n    id: string;\r\n    content: string;\r\n    left: number;\r\n    top: number;\r\n    right: number;\r\n    bottom: number;\r\n    zIndex: number;\r\n    color: string;\r\n    locks: {\r\n        editor: boolean,\r\n        position: boolean,\r\n        delete: boolean\r\n    }\r\n}\r\n\r\ntype LockTypes = 'editor' | 'position' | 'delete';\r\n\r\ninterface Board {\r\n    title: string;\r\n    notes: { [name: string]: Note };\r\n    id: string;\r\n    width: number;\r\n    height: number;\r\n    maxZIndex: number;\r\n}\r\n\r\nexport interface State {\r\n    boards: { [name: string]: Board };\r\n    showBoard: boolean;\r\n    currentBoardId: string;\r\n}\r\n\r\nconst initialState: State = {\r\n    boards: JSON.parse(localStorage.getItem('boards') || '{}'),\r\n    showBoard: false,\r\n    currentBoardId: ''\r\n};\r\n\r\ninterface BoardActions {\r\n    title: string;\r\n    id: string;\r\n    zIndex: number;\r\n    direction: string;\r\n    size: number;\r\n}\r\n\r\ninterface NoteActions {\r\n    noteId: string;\r\n    position: { left: number, top: number, right: number, bottom: number };\r\n    content: string;\r\n    color: string;\r\n    lockType: LockTypes;\r\n}\r\n\r\ninterface ReducerActions extends BoardActions, NoteActions {\r\n    type: string;\r\n}\r\n\r\nconst createNewNote = (state: State) => {\r\n    const id = v4();\r\n    const BOARD_PADDING = 20;\r\n    const BOARD_TOP_PADDING = 20;\r\n    const newZIndex = state.boards[state.currentBoardId].maxZIndex + 1;\r\n    const tempBoardsState = { ...state.boards };\r\n    const notes = tempBoardsState[state.currentBoardId].notes;\r\n    notes[id] = {\r\n        id, content: '', left: BOARD_PADDING + window.scrollX, top: BOARD_PADDING + BOARD_TOP_PADDING + window.scrollY, right: 0, bottom: 0, zIndex: newZIndex, color: '', locks: { editor: false, position: false, delete: false }\r\n    };\r\n\r\n    return tempBoardsState;\r\n};\r\n\r\nconst createTempNote = (state: State, id: string, changeValue: {}) => {\r\n    return { ...state.boards[state.currentBoardId].notes[id], ...changeValue };\r\n};\r\n\r\nconst updateNote = (state: State, id: string, noteValue: Note) => {\r\n    return {\r\n        ...state.boards,\r\n        [state.currentBoardId]: {\r\n            ...state.boards[state.currentBoardId],\r\n            notes: {\r\n                ...state.boards[state.currentBoardId].notes,\r\n                [id]: {\r\n                    ...noteValue\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nconst updateBoard = (state: State, board: { [name: string]: Board }, newBoardValue: {}) => {\r\n    return {\r\n        ...board,\r\n        [state.currentBoardId]: {\r\n            ...board[state.currentBoardId],\r\n            ...newBoardValue\r\n        }\r\n    };\r\n};\r\n\r\n// Takes care of updating state and local storage, something that is needed in each state update\r\nconst updateBoardReducer = (state: State, newBoard: any) => {\r\n    updateLocalStorage('boards', newBoard);\r\n    return {\r\n        ...state,\r\n        boards: newBoard\r\n    };\r\n};\r\n\r\nconst updateNoteInReducer = (state: State, id: string, changeValue: any) => {\r\n    const note = createTempNote(state, id, changeValue);\r\n    const updatedBoard = updateNote(state, id, note);\r\n\r\n    return updateBoardReducer(state, updatedBoard);\r\n};\r\n\r\nconst boardReducer = (state = initialState, action: ReducerActions) => {\r\n    switch (action.type) {\r\n        case 'CREATE_BOARD': {\r\n            if (Object.keys(state.boards).length >= 2) return state;\r\n            const id = v4();\r\n            const newBoards = { ...state.boards }\r\n            newBoards[id] = { title: '', notes: {}, id, width: 0, height: 0, maxZIndex: 1 };\r\n\r\n            return updateBoardReducer(state, newBoards);\r\n        }\r\n        case 'SAVE_BOARD_TITLE': {\r\n            const newBoards = {\r\n                ...state.boards,\r\n                [state.currentBoardId]: {\r\n                    ...state.boards[state.currentBoardId],\r\n                    title: action.title\r\n                }\r\n            };\r\n            return updateBoardReducer(state, newBoards);\r\n        }\r\n        case 'UPDATE_BOARD_ZINDEX':\r\n            return updateBoardReducer(state, updateBoard(state, state.boards, { maxZIndex: action.zIndex }));\r\n        case 'UPDATE_BOARD_SIZE':\r\n            return updateBoardReducer(state, updateBoard(state, state.boards, { [action.direction]: action.size }));\r\n        case 'SHOW_BOARD':\r\n            return { ...state, currentBoardId: action.id, showBoard: true };\r\n        case 'HIDE_BOARD':\r\n            return { ...state, currentBoardId: '', showBoard: false };\r\n        case 'DELETE_BOARD':\r\n            const newBoards = { ...state.boards };\r\n            delete newBoards[action.id];\r\n\r\n            return updateBoardReducer(state, newBoards);\r\n        default:\r\n            return noteReducer(state, action);\r\n    }\r\n};\r\n\r\nconst noteReducer = (state = initialState, action: ReducerActions) => {\r\n    switch (action.type) {\r\n        case 'CREATE_NOTE':\r\n            return updateBoardReducer(state, createNewNote(state));\r\n        case 'UPDATE_NOTE_POSITION':\r\n            return updateNoteInReducer(state, action.noteId, { ...action.position });\r\n        case 'UPDATE_NOTE_ZINDEX':\r\n            return updateNoteInReducer(state, action.noteId, { zIndex: action.zIndex });\r\n        case 'SAVE_NOTE_CONTENT':\r\n            return updateNoteInReducer(state, action.noteId, { content: action.content });\r\n        case 'CHANGE_NOTE_COLOR':\r\n            return updateNoteInReducer(state, action.noteId, { color: action.color });\r\n        case 'TOGGLE_NOTE_LOCK':\r\n            const lockPath = state.boards[state.currentBoardId].notes[action.noteId].locks\r\n\r\n            return updateNoteInReducer(state, action.noteId, { locks: { ...lockPath, [action.lockType]: !lockPath[action.lockType] } });\r\n        case 'DELETE_NOTE': {\r\n            const notes = { ...state.boards[state.currentBoardId].notes }\r\n            delete notes[action.id];\r\n            const updatedBoard = {\r\n                ...state.boards,\r\n                [state.currentBoardId]: {\r\n                    ...state.boards[state.currentBoardId],\r\n                    notes\r\n                }\r\n            }\r\n\r\n            return updateBoardReducer(state, updatedBoard);\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default boardReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport pageReducer from './store/pageReducer';\r\nimport boardReducer from './store/boardReducer';\r\nimport { createStore, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  page: pageReducer,\r\n  board: boardReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuContainer_MenuToggle__8D7uP\",\"expanded\":\"MenuContainer_expanded__32-Br\",\"collapsed\":\"MenuContainer_collapsed__2SHcZ\",\"MenuContainer\":\"MenuContainer_MenuContainer__2Y2IC\",\"MenuButtonContainer\":\"MenuContainer_MenuButtonContainer__2kwCO\",\"active\":\"MenuContainer_active__qGZgx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuItem\":\"MenuItem_MenuItem__1pw6P\",\"MenuPageImage\":\"MenuItem_MenuPageImage__2JOSw\",\"MenuBoardImage\":\"MenuItem_MenuBoardImage__2Bzdo\",\"MenuItemButton\":\"MenuItem_MenuItemButton__3v7da\",\"SubMenu\":\"MenuItem_SubMenu__1orS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteBoard\":\"NoteBoard_NoteBoard__3CFqR\",\"AddButton\":\"NoteBoard_AddButton__fHatq\",\"AddButtonArrowContainer\":\"NoteBoard_AddButtonArrowContainer__2P4jZ\",\"arrow-move\":\"NoteBoard_arrow-move__WW3vD\",\"AddButtonArrowBody\":\"NoteBoard_AddButtonArrowBody__tGEls\",\"AddButtonArrow\":\"NoteBoard_AddButtonArrow__30w_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteMenu\":\"NoteMenu_NoteMenu__g5tSX\",\"NoteSubMenu\":\"NoteMenu_NoteSubMenu__1BGB5\",\"LockMenuItem\":\"NoteMenu_LockMenuItem__99Mr4\",\"DeleteModal\":\"NoteMenu_DeleteModal__3drPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__1GXh2\",\"btn\":\"Menu_btn__wbnRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageEditorContainer\":\"PageContainer_PageEditorContainer__Ypac8\",\"PageContainer\":\"PageContainer_PageContainer__15tHX\",\"PageEditorButtonContainer\":\"PageContainer_PageEditorButtonContainer__1H76s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoteMenuItem\":\"NoteMenuItem_NoteMenuItem__22r3_\",\"NoteSubMenuItem\":\"NoteMenuItem_NoteSubMenuItem__3nrUp\",\"delete\":\"NoteMenuItem_delete__2Tzg6\",\"disabled\":\"NoteMenuItem_disabled__3e5iK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainHeader\":\"Header_MainHeader__1dx0c\",\"TitleContainer\":\"Header_TitleContainer__3bySe\"};"],"sourceRoot":""}